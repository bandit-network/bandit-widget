{"version":3,"file":"static/js/3.133d6913.chunk.js","mappings":"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","sources":["constants/index.js","components/Svgs/copy.jsx","components/Svgs/checkCircle.jsx","components/CopyAddress/index.js","components/Svgs/discord.jsx","components/Svgs/twitter.jsx","components/Svgs/website.jsx","widgets/Collection/Details/styles.js","components/Svgs/reportIcon.jsx","widgets/Collection/Details/index.js","constants/socialMedia.js","widgets/Collection/collection.js"],"sourcesContent":["import BigNumber from 'bignumber.js'\n\nexport const BIG_TEN = new BigNumber(10)\n\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\n\nexport const NULL_ADDRESS = '0x0000000000000000000000000000000000000000'\n","import React from 'react'\n\nconst Copy = (props) => {\n  return (\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" {...props}>\n      <path\n        d=\"M27 23V5H9\"\n        stroke={props.iconcolor ?? '#49536E'}\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M23 9H5V27H23V9Z\"\n        stroke={props.iconcolor ?? '#49536E'}\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nexport default Copy\n","import React from 'react'\n\nconst CheckCircle = (props) => {\n  return (\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" {...props}>\n      <path\n        d=\"M21.5 13L14.1625 20L10.5 16.5\"\n        stroke={props.iconcolor ?? '#49536E'}\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n\n      <path\n        d=\"M16 28C22.6274 28 28 22.6274 28 16C28 9.37258 22.6274 4 16 4C9.37258 4 4 9.37258 4 16C4 22.6274 9.37258 28 16 28Z\"\n        stroke={props.iconcolor ?? '#49536E'}\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nexport default CheckCircle\n","import React, { useState, useEffect } from 'react'\nimport { utils } from 'ethers'\nimport { PublicKey } from '@solana/web3.js'\nimport styled from '@emotion/styled'\nimport { Box, Flex } from '@chakra-ui/react'\nimport Copy from '../Svgs/copy'\nimport CheckCircle from '../Svgs/checkCircle'\nimport { copyText, truncateAddress } from '../../utils'\nimport { colors } from '../../styles'\nimport { BLOCK_EXPLORER, SupportedChainId } from '../../constants/chains'\nimport { NULL_ADDRESS } from '../../constants'\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  position: relative;\n`\nconst Address = styled.a`\n  // color: ${({ theme }) => colors.foreground};\n  font-size: 14px;\n  font-weight: 600;\n  margin-right: 5px;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline !important;\n    color: ${({ theme }) => colors.foreground};\n  }\n`\n\nconst Icon = styled(Copy)`\n  cursor: pointer;\n`\nconst Copied = styled(CheckCircle)`\n  cursor: pointer;\n`\n\nconst CopyAddress = (props) => {\n  const [copied, setCopied] = useState(false)\n  const [isValidAddress, setIsValidAddress] = useState(false)\n  const { address, addressLength = 5, chainId = 1 } = props\n\n  const isStacks = [SupportedChainId.STACKS_TESTNET, SupportedChainId.STACKS_MAINNET].includes(chainId)\n\n  useEffect(() => {\n    try {\n      if (isStacks) {\n        setIsValidAddress(true)\n        return\n      }\n      const _isValidAddress = utils.isAddress(address) || PublicKey.isOnCurve(address)\n      setIsValidAddress(_isValidAddress)\n    } catch (e) {\n      // console.log(e)\n    }\n  }, [address, chainId, isStacks])\n\n  const onClickCopy = () => {\n    setCopied(true)\n\n    copyText(isValidAddress ? address : NULL_ADDRESS)\n\n    setTimeout(() => {\n      setCopied(false)\n    }, 1000)\n  }\n\n  return (\n    <Box {...props}>\n      <Wrapper>\n        <Address\n          href={\n            isStacks\n              ? `${BLOCK_EXPLORER[chainId]}txid/${address}${\n                  chainId === SupportedChainId.STACKS_TESTNET ? '?chain=testnet' : ''\n                }`\n              : `${BLOCK_EXPLORER[chainId]}address/${address}${\n                  chainId === SupportedChainId.SOLANA_DEVNET ? '?cluster=devnet' : ''\n                }`\n          }\n          target=\"_blank\"\n        >\n          {isValidAddress ? truncateAddress(address, addressLength) : truncateAddress(NULL_ADDRESS, addressLength)}\n        </Address>\n        {copied ? (\n          <Copied width={24} height={24} iconcolor={copied && 'green'} />\n        ) : (\n          <Icon width={24} height={24} onClick={onClickCopy} />\n        )}\n      </Wrapper>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\n\nconst Discord = (props) => {\n  return (\n    <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" {...props}>\n      <path\n        d=\"M10.5 17.0625C11.2249 17.0625 11.8125 16.4749 11.8125 15.75C11.8125 15.0251 11.2249 14.4375 10.5 14.4375C9.77513 14.4375 9.1875 15.0251 9.1875 15.75C9.1875 16.4749 9.77513 17.0625 10.5 17.0625Z\"\n        fill={props.iconcolor ?? '#49536E'}\n      />\n      <path\n        d=\"M17.5 17.0625C18.2249 17.0625 18.8125 16.4749 18.8125 15.75C18.8125 15.0251 18.2249 14.4375 17.5 14.4375C16.7751 14.4375 16.1875 15.0251 16.1875 15.75C16.1875 16.4749 16.7751 17.0625 17.5 17.0625Z\"\n        fill={props.iconcolor ?? '#49536E'}\n      />\n      <path\n        d=\"M8.1377 8.75003C10.0345 8.15555 12.0124 7.86034 14.0002 7.87503C15.988 7.86034 17.9659 8.15555 19.8627 8.75003\"\n        stroke={props.iconcolor ?? '#49536E'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M19.8627 19.25C17.9659 19.8445 15.988 20.1397 14.0002 20.125C12.0124 20.1397 10.0345 19.8445 8.1377 19.25\"\n        stroke={props.iconcolor ?? '#49536E'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M16.9529 19.917L18.2764 22.542C18.3615 22.721 18.5064 22.8648 18.686 22.9486C18.8656 23.0324 19.0688 23.0511 19.2607 23.0014C21.9404 22.3451 24.2592 21.2076 25.9436 19.742C26.0705 19.63 26.1628 19.4839 26.2093 19.321C26.2558 19.1582 26.2547 18.9855 26.2061 18.8232L22.4982 6.442C22.4622 6.31529 22.3968 6.19882 22.3076 6.10194C22.2183 6.00506 22.1075 5.93048 21.9842 5.88418C20.9366 5.45442 19.8533 5.1177 18.7467 4.87793C18.534 4.83136 18.3117 4.86472 18.122 4.97164C17.9324 5.07856 17.7888 5.25156 17.7186 5.45762L16.8545 8.07168\"\n        stroke={props.iconcolor ?? '#49536E'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M11.0468 19.917L9.72335 22.542C9.6382 22.721 9.49336 22.8648 9.31373 22.9486C9.13409 23.0324 8.93087 23.0511 8.73898 23.0014C6.05929 22.3451 3.74054 21.2076 2.05616 19.742C1.92917 19.63 1.83696 19.4839 1.79044 19.321C1.74391 19.1582 1.74503 18.9855 1.79366 18.8232L5.50148 6.442C5.53756 6.31529 5.60287 6.19882 5.69215 6.10194C5.78143 6.00506 5.89219 5.93048 6.01554 5.88418C7.06309 5.45442 8.14644 5.1177 9.25304 4.87793C9.4657 4.83136 9.68806 4.86472 9.87769 4.97164C10.0673 5.07856 10.2109 5.25156 10.2812 5.45762L11.1452 8.07168\"\n        stroke={props.iconcolor ?? '#49536E'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M10.5 17.0625C11.2249 17.0625 11.8125 16.4749 11.8125 15.75C11.8125 15.0251 11.2249 14.4375 10.5 14.4375C9.77513 14.4375 9.1875 15.0251 9.1875 15.75C9.1875 16.4749 9.77513 17.0625 10.5 17.0625Z\"\n        fill={props.iconcolor ?? '#49536E'}\n      />\n      <path\n        d=\"M17.5 17.0625C18.2249 17.0625 18.8125 16.4749 18.8125 15.75C18.8125 15.0251 18.2249 14.4375 17.5 14.4375C16.7751 14.4375 16.1875 15.0251 16.1875 15.75C16.1875 16.4749 16.7751 17.0625 17.5 17.0625Z\"\n        fill={props.iconcolor ?? '#49536E'}\n      />\n      <path\n        d=\"M8.1377 8.75003C10.0345 8.15555 12.0124 7.86034 14.0002 7.87503C15.988 7.86034 17.9659 8.15555 19.8627 8.75003\"\n        stroke={props.iconcolor ?? '#49536E'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M19.8627 19.25C17.9659 19.8445 15.988 20.1397 14.0002 20.125C12.0124 20.1397 10.0345 19.8445 8.1377 19.25\"\n        stroke={props.iconcolor ?? '#49536E'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M16.9529 19.917L18.2764 22.542C18.3615 22.721 18.5064 22.8648 18.686 22.9486C18.8656 23.0324 19.0688 23.0511 19.2607 23.0014C21.9404 22.3451 24.2592 21.2076 25.9436 19.742C26.0705 19.63 26.1628 19.4839 26.2093 19.321C26.2558 19.1582 26.2547 18.9855 26.2061 18.8232L22.4982 6.442C22.4622 6.31529 22.3968 6.19882 22.3076 6.10194C22.2183 6.00506 22.1075 5.93048 21.9842 5.88418C20.9366 5.45442 19.8533 5.1177 18.7467 4.87793C18.534 4.83136 18.3117 4.86472 18.122 4.97164C17.9324 5.07856 17.7888 5.25156 17.7186 5.45762L16.8545 8.07168\"\n        stroke={props.iconcolor ?? '#49536E'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M11.0468 19.917L9.72335 22.542C9.6382 22.721 9.49336 22.8648 9.31373 22.9486C9.13409 23.0324 8.93087 23.0511 8.73898 23.0014C6.05929 22.3451 3.74054 21.2076 2.05616 19.742C1.92917 19.63 1.83696 19.4839 1.79044 19.321C1.74391 19.1582 1.74503 18.9855 1.79366 18.8232L5.50148 6.442C5.53756 6.31529 5.60287 6.19882 5.69215 6.10194C5.78143 6.00506 5.89219 5.93048 6.01554 5.88418C7.06309 5.45442 8.14644 5.1177 9.25304 4.87793C9.4657 4.83136 9.68806 4.86472 9.87769 4.97164C10.0673 5.07856 10.2109 5.25156 10.2812 5.45762L11.1452 8.07168\"\n        stroke={props.iconcolor ?? '#49536E'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nexport default Discord\n","import React from 'react'\n\nconst Twitter = (props) => {\n  return (\n    <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" {...props}>\n      <path\n        d=\"M13.9996 9.62491C13.9996 7.21866 16.0231 5.2171 18.4293 5.24991C19.272 5.25964 20.0939 5.51254 20.7963 5.97821C21.4987 6.44388 22.0516 7.10251 22.3887 7.87491H26.2496L22.7168 11.4077C22.4888 14.9565 20.9179 18.2852 18.3234 20.7171C15.7289 23.1491 12.3057 24.5017 8.74961 24.4999C5.24961 24.4999 4.37461 23.1874 4.37461 23.1874C4.37461 23.1874 7.87461 21.8749 9.62461 19.2499C9.62461 19.2499 2.62461 15.7499 4.37461 6.12491C4.37461 6.12491 8.74961 10.4999 13.9996 11.3749V9.62491Z\"\n        stroke={props.iconcolor ?? '#49536E'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nexport default Twitter\n","import React from 'react'\n\nconst Website = (props) => {\n  return (\n    <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" {...props}>\n      <path\n        d=\"M13.3768 7.80945L15.5424 5.64382C16.4593 4.80812 17.6629 4.35783 18.9032 4.38655C20.1435 4.41526 21.325 4.92076 22.2023 5.79801C23.0795 6.67525 23.585 7.85678 23.6137 9.09705C23.6424 10.3373 23.1922 11.541 22.3564 12.4579L19.2611 15.5423C18.815 15.99 18.2849 16.3453 17.7012 16.5877C17.1175 16.8302 16.4916 16.955 15.8596 16.955C15.2275 16.955 14.6017 16.8302 14.0179 16.5877C13.4342 16.3453 12.9041 15.99 12.458 15.5423\"\n        stroke={props.iconcolor ?? '#49536E'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M14.623 20.1904L12.4574 22.3561C11.5405 23.1918 10.3368 23.6421 9.09657 23.6133C7.85629 23.5846 6.67476 23.0791 5.79752 22.2019C4.92027 21.3246 4.41477 20.1431 4.38606 18.9028C4.35735 17.6626 4.80763 16.4589 5.64334 15.542L8.73865 12.4576C9.18475 12.0099 9.71486 11.6546 10.2986 11.4121C10.8823 11.1697 11.5081 11.0449 12.1402 11.0449C12.7723 11.0449 13.3981 11.1697 13.9818 11.4121C14.5656 11.6546 15.0957 12.0099 15.5418 12.4576\"\n        stroke={props.iconcolor ?? '#49536E'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nexport default Website\n","import styled from '@emotion/styled'\nimport { Box, Card, Flex } from '@chakra-ui/react'\nimport { colors } from '../../../styles'\n\nexport const Container = styled(Box)`\n  //max-width: 1400px;\n  margin: 0 auto;\n  position: relative;\n`\n\nexport const CoverImageWrapper = styled(Box)`\n  position: relative;\n  &:before {\n    content: '';\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: none;\n    @media (min-width: 968px) {\n      background: linear-gradient(90deg, whitesmoke 17%, rgba(255, 255, 255, 0.2) 100%);\n      z-index: 1;\n    }\n  }\n`\n\nexport const CoverImage = styled(Box)`\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n`\n\nexport const DetailsWrapper = styled(Box)`\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 2;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nexport const DetailContainer = styled(Flex)`\n  max-width: 1400px;\n  margin: 0 auto;\n`\nexport const DetailPanel = styled(Card)`\n  /* width: 350px; */\n  //display: flex;\n  //flex-direction: column;\n  //align-items: center;\n  margin-top: -5%;\n  padding: 10px 20px;\n`\n\nexport const ProfileImage = styled(Box)`\n  position: relative;\n  overflow: hidden;\n  background: ${colors.secondary};\n  margin-top: -16px;\n  border: 2px solid ${colors.secondary};\n  border-radius: 12px;\n  @media (min-width: 968px) {\n    border-radius: 50%;\n    border: none;\n    margin-top: -8px;\n    min-width: 120px !important;\n    min-height: 120px !important;\n  }\n`\n\nexport const Description = styled(Box)`\n  font-size: 14px;\n  div {\n    .short-text .readMoreText {\n      color: ${colors.secondary} !important;\n      text-decoration: underline;\n      font-weight: 600;\n    }\n  }\n`\n\nexport const StatsBox = styled(Box)`\n  padding: 10px;\n  margin-bottom: 10px;\n  border-radius: 20px;\n`\n\nexport const RoadMapContainer = styled(Box)`\n  /* width: 100%; */\n  /* height: 100vh; */\n\n  .sun-editor .se-toolbar {\n    display: none !important;\n  }\n  .se-resizing-bar {\n    display: none;\n  }\n  .sun-editor {\n    border: none;\n  }\n  .sun-editor-editable {\n    padding: 0 !important;\n  }\n  figure {\n    padding-bottom: 60px !important;\n  }\n  /* iframe {\n    height: ${({ isExtracted }) => (isExtracted ? '54vh !important' : 'initial')};\n  } */\n  .sun-editor-editable .se-video-container iframe,\n  .sun-editor-editable .se-video-container video {\n    outline: none !important;\n  }\n\n  textarea {\n    display: none !important;\n  }\n`\n\nexport const StatsWrapper = styled(Box)`\n  display: grid;\n  justify-items: center;\n  grid-template-columns: repeat(2, 1fr);\n  position: relative;\n  background-color: ${colors.background};\n  border-radius: 12px;\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.12);\n  padding: 10px;\n  margin: -30px 15px 20px 15px;\n\n  @media (min-width: 968px) {\n    position: absolute;\n    left: 40px;\n    transform: translateY(-50%);\n    display: flex;\n    margin-top: 0;\n    z-index: 1;\n  }\n`\n\nexport const StyledStatsItem = styled(Flex)`\n  align-items: center;\n  margin-right: 20px;\n  padding-right: 20px;\n  display: inline-flex;\n\n  @media (min-width: 968px) {\n    &:not(:last-child) {\n      border-right: 1px solid ${colors.foreground};\n    }\n  }\n`\n","import React from 'react'\n\nconst Report = (props) => {\n  return (\n    <svg width=\"15\" height=\"17\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M5 27V6\" stroke=\"black\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <path\n        d=\"M5 21.0001C13 15.0001 19 27.0001 27 21.0001V6.00012C19 12.0001 13 0.000117183 5 6.00012\"\n        stroke=\"black\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nexport default Report\n","import { CloseIcon } from '@chakra-ui/icons'\nimport { Box, Button, Flex, Image, Link, Text, Tooltip, useMediaQuery, CircularProgress } from '@chakra-ui/react'\nimport styled from '@emotion/styled'\nimport IframeResizer from 'iframe-resizer-react'\nimport { lazy, useCallback, useEffect, useState } from 'react'\nimport ReadMoreAndLess from 'react-read-more-less'\n// import SunEditor from 'suneditor-react'\nimport CopyAddress from '../../../components/CopyAddress'\nimport Discord from '../../../components/Svgs/discord'\nimport TokenIcon from '../../../components/Svgs/tokenIcons'\nimport Twitter from '../../../components/Svgs/twitter'\nimport Website from '../../../components/Svgs/website'\nimport { getCollectionById, getRoadmapById } from '../../../state/collection/source'\nimport { extractSrc, getImageUrl, makeFriendlyNumber } from '../../../utils'\nimport {\n  Container,\n  CoverImage,\n  CoverImageWrapper,\n  Description,\n  DetailContainer,\n  DetailsWrapper,\n  ProfileImage,\n  RoadMapContainer,\n  StatsWrapper,\n  StyledStatsItem,\n} from './styles'\nimport ReportIcon from '../../../components/Svgs/reportIcon'\nimport { useDispatch } from 'react-redux'\nimport { updateShowMint } from '../../../state/collection/reducer'\nimport { DISCORD, TWITTER } from '../../../constants/socialMedia'\n\nconst HtmlToReactParser = require('html-to-react').Parser\nconst htmlToReactParser = new HtmlToReactParser()\n\nconst StyledIcon = styled(CloseIcon)`\n  position: fixed;\n  top: 10px;\n  right: 30px;\n  color: white;\n  z-index: 3;\n  cursor: pointer;\n  color: white;\n`\n\nconst StyledReport = styled.a`\n  position: absolute;\n  top: 10px;\n  right: 40px;\n  z-index: 3;\n  background-color: white;\n  border-radius: 50%;\n  padding: 6px;\n  cursor: pointer;\n`\n\nconst DEFAULT_ROADMAP = `<p style=\"text-align: center;\"><strong><br>\n</strong></p>\n<p style=\"text-align: center;\"><strong><br>\n</strong></p>\n\n<p style=\"text-align: center;\"><strong><br>\n</strong></p>\n\n<p style=\"text-align: center;\"><strong><br>\n</strong></p>\n\n<p style=\"text-align: center;\"><strong><br>\n</strong></p>\n\n<p style=\"text-align: center;\"><span style=\"font-size: 16px;\">​<span style=\"color: rgb(42, 46, 52);\">No roadmap to display</span></span><br>\n</p>\n`\n\nconst CollectionDetails = ({ collectionId, accessKey, closeDrawer }) => {\n  const [view, setView] = useState('')\n  const [mintOpen, setMintOpen] = useState(false)\n  const [collection, setCollection] = useState({})\n  const [roadmapLoader, setRoadmapLoader] = useState(true)\n\n  const dispatch = useDispatch()\n\n  const getCollectionData = useCallback(async () => {\n    try {\n      const _data = await getCollectionById(accessKey, collectionId)\n      setCollection(_data)\n    } catch (error) {\n      console.log(error)\n    }\n  }, [accessKey, collectionId])\n\n  useEffect(() => {\n    getCollectionData()\n  }, [])\n\n  const [isDesktop] = useMediaQuery('(min-width: 968px)')\n\n  const getData = useCallback(\n    async (id, accessKey) => {\n      try {\n        const { roadMap } = await getRoadmapById(accessKey, id)\n        setView(roadMap)\n      } catch (error) {\n        console.log(error)\n        setView(DEFAULT_ROADMAP)\n      }\n    },\n    [collectionId, accessKey],\n  )\n\n  useEffect(() => {\n    if (collectionId && accessKey) {\n      getData(collectionId, accessKey)\n    }\n  }, [collectionId, accessKey])\n\n  const onClickMint = () => {\n    if (collection?.isExternalMint) {\n      window.open(collection.profile.socialmedia.website)\n    } else {\n      dispatch(\n        updateShowMint({\n          showMint: true,\n        }),\n      )\n    }\n  }\n\n  const ReactElement = htmlToReactParser.parse(view)\n\n  return (\n    <Container>\n      <StyledIcon onClick={closeDrawer} mt=\"-36px\" mr=\"-4\" w=\"3.5\" h=\"3.5\" />\n      <CoverImageWrapper>\n        <Tooltip label=\"Report collection\" aria-label=\"A tooltip\">\n          <StyledReport target=\"_blank\" href=\"https://forms.clickup.com/37445485/f/13pqvd-1725/9ZWUMF97QSUXF01LBO\">\n            <ReportIcon />\n          </StyledReport>\n        </Tooltip>\n\n        <CoverImage\n          backgroundImage={\n            collection?.profile?.coverImage &&\n            getImageUrl(collection?.profile?.coverImage, { height: 600, quality: 80 })\n          }\n          h={['150px', '150px', '150px', '250px']}\n        />\n        <DetailsWrapper\n          zIndex={2}\n          pos={['relative', 'relative', 'relative', 'absolute', 'absolute']}\n          top={['-48px', '-48px', '-48px', '0', '0']}\n          p={['0 15px', '0 15px', '0 15px', '120px 40px', '120px 40px']}\n        >\n          <Flex>\n            <Flex alignItems={'center'}>\n              <ProfileImage>\n                <Image\n                  src={\n                    collection?.profile?.profileImage &&\n                    getImageUrl(collection?.profile?.profileImage, { height: 600, quality: 80 })\n                  }\n                  height={['96px', '96px', '96px', '120px', '120px']}\n                  width={['96px', '96px', '96px', '120px', '120px']}\n                  fit=\"cover\"\n                  // fallback={<Placeholder />}\n                  alt=\"\"\n                />\n              </ProfileImage>\n              {isDesktop && (\n                <Box ml=\"20px\" h=\"120px\">\n                  <Metadata collection={collection} onClickMint={onClickMint} />\n                </Box>\n              )}\n            </Flex>\n            <Flex ml=\"auto\" mt=\"16\" alignItems={'flex-start'}>\n              {!isDesktop && <CollectionLinks collection={collection} />}\n              {collection?.mintEnabled && isDesktop && (\n                <Button\n                  mt=\"80px\"\n                  bg=\"buttonBackground\"\n                  color=\"buttonColor\"\n                  variant=\"solid\"\n                  onClick={onClickMint}\n                  _hover={{\n                    backgroundColor: 'buttonBackground',\n                  }}\n                >\n                  Mint\n                </Button>\n              )}\n            </Flex>\n          </Flex>\n          {!isDesktop && (\n            <Box mt=\"3\">\n              <Metadata collection={collection} onClickMint={onClickMint} />\n            </Box>\n          )}\n        </DetailsWrapper>\n      </CoverImageWrapper>\n      <Stats {...collection?.stats} chainId={collection?.contract?.chainId} />\n      {extractSrc(view) && roadmapLoader && (\n        <Flex\n          minHeight=\"500px\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          mt={['-10px', '-10px', '-10px', '40px', '40px']}\n        >\n          <CircularProgress size=\"35px\" color=\"gray.500\" isIndeterminate />\n        </Flex>\n      )}\n      <DetailContainer\n        px={['15px', '15px', '15px', '40px']}\n        alignItems={['center', 'center', 'center', 'initial', 'initial']}\n        flexDir={['column', 'column', 'column', 'row', 'row']}\n      >\n        <RoadMapContainer w=\"full\" h=\"full\" mt={['-10px', '-10px', '-10px', '40px', '40px']} zIndex={0}>\n          {extractSrc(view) ? (\n            <IframeResizer\n              src={extractSrc(view)}\n              style={{ width: '1px', minWidth: '100%' }}\n              heightCalculationMethod=\"bodyScroll\"\n              onLoad={() => setRoadmapLoader(false)}\n            />\n          ) : (\n            ReactElement && ReactElement\n          )}\n          {/*<SunEditor height=\"auto\" readOnly setAllPlugins={false} disable={true} setContents={view} />*/}\n        </RoadMapContainer>\n      </DetailContainer>\n      {/* <Flex w=\"98%\" justifyContent=\"flex-end\" pb=\"4\">\n        <DataSource />\n      </Flex> */}\n    </Container>\n  )\n}\n\nconst Metadata = ({ collection, onClickMint }) => {\n  const [isDesktop] = useMediaQuery('(min-width: 968px)')\n\n  const { mintEnabled } = collection\n  return (\n    <>\n      <Flex>\n        <Text color={['foreground']} textAlign=\"center\" fontSize={'lg'} fontWeight=\"600\">\n          {collection?.profile?.name}\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\" my=\"2\">\n        <CopyAddress\n          address={\n            collection?.contract?.chainId === 9091 || collection?.contract?.chainId === 9090\n              ? collection?.contract?.candyMachineId\n              : collection?.contract?.contractAddress\n          }\n          chainId={collection?.contract?.chainId}\n        />\n        {isDesktop && <CollectionLinks collection={collection} />}\n      </Flex>\n      <Description color={['foreground']} maxW={['initial', 'initial', 'initial', '80%']}>\n        {collection && collection?.profile?.bio && (\n          <ReadMoreAndLess className=\"read-more-content\" charLimit={100} readMoreText=\"  more\" readLessText=\"  less\">\n            {collection?.profile?.bio}\n          </ReadMoreAndLess>\n        )}\n      </Description>\n      {mintEnabled && !isDesktop && (\n        <Button\n          w={['full']}\n          bg=\"buttonBackground\"\n          color=\"buttonColor\"\n          size=\"lg\"\n          mt=\"4\"\n          variant=\"solid\"\n          onClick={onClickMint}\n          _hover={{\n            backgroundColor: 'buttonBackground',\n          }}\n        >\n          Mint\n        </Button>\n      )}\n    </>\n  )\n}\n\nconst CollectionLinks = ({ collection }) => {\n  if (!collection) return null\n  return (\n    <Flex alignItems={'center'}>\n      {collection?.profile?.socialmedia?.website && (\n        <Link w=\"fit-content\" ml=\"12px\" href={collection?.profile?.socialmedia?.website} target=\"_blank\">\n          <Website width=\"25px\" height=\"25px\" color={'foreground'} />\n        </Link>\n      )}\n      {collection?.profile?.socialmedia?.discord && (\n        <Link w=\"fit-content\" ml=\"12px\" href={`${DISCORD}${collection?.profile?.socialmedia?.discord}`} target=\"_blank\">\n          <Discord width=\"25px\" height=\"25px\" color={'foreground'} />\n        </Link>\n      )}\n      {collection?.profile?.socialmedia?.twitter && (\n        <Link w=\"fit-content\" ml=\"12px\" href={`${TWITTER}${collection?.profile?.socialmedia?.twitter}`} target=\"_blank\">\n          <Twitter width=\"25px\" height=\"25px\" color={'foreground'} />\n        </Link>\n      )}\n    </Flex>\n  )\n}\n\nconst Stats = ({ chainId, maxSupply, totalSupply, mintPercentage, price }) => {\n  return (\n    <StatsWrapper>\n      <StatsItem\n        title=\"Price\"\n        value={price?.value}\n        Icon={\n          <Box mr=\"1\">\n            <TokenIcon width={16} height={16} chainId={chainId} />\n          </Box>\n        }\n      />\n      <StatsItem title=\"Items\" value={totalSupply} />\n      <StatsItem title=\"Supply\" value={maxSupply} />\n      <StatsItem title=\"Mint %\" value={mintPercentage} />\n    </StatsWrapper>\n  )\n}\n\nconst StatsItem = ({ title, value, Icon }) => {\n  return (\n    <StyledStatsItem>\n      <Text color=\"foreground\" fontSize=\"14px\" fontWeight=\"400\" mr={'5px'}>\n        {title}:\n      </Text>\n      <Flex alignItems=\"center\">\n        {Icon && Icon}\n        <Text color=\"foreground\" fontSize=\"14px\" fontWeight=\"600\" title={value}>\n          {isNaN(value) ? value : makeFriendlyNumber(value)}\n        </Text>\n      </Flex>\n    </StyledStatsItem>\n  )\n}\nexport default CollectionDetails\n","const INSTAGRAM = 'https://instagram.com/'\nconst FACEBOOK = 'https://facebook.com/'\nconst TWITTER = 'https://twitter.com/'\nconst DISCORD = 'https://discord.gg/'\n\nexport { INSTAGRAM, FACEBOOK, TWITTER, DISCORD }\n","import React, { useState } from 'react'\nimport CollectionDetails from './Details'\n\nconst Collection = ({ accessKey, collectionId, closeDrawer }) => {\n  // const [collection, setCollection] = useState({})\n  return (\n    <CollectionDetails\n      // collection={collection}\n      accessKey={accessKey}\n      collectionId={collectionId}\n      closeDrawer={closeDrawer}\n    />\n  )\n}\n\nexport default Collection\n"],"names":["DEFAULT_TOKEN_DECIMAL","BigNumber","pow","NULL_ADDRESS","props","width","height","viewBox","fill","d","stroke","iconcolor","strokeWidth","strokeLinecap","strokeLinejoin","Wrapper","styled","Flex","Address","theme","colors","Icon","Copy","Copied","CheckCircle","useState","copied","setCopied","isValidAddress","setIsValidAddress","address","addressLength","chainId","isStacks","SupportedChainId","includes","useEffect","_isValidAddress","utils","PublicKey","e","href","BLOCK_EXPLORER","target","truncateAddress","onClick","copyText","setTimeout","Container","Box","CoverImageWrapper","CoverImage","DetailsWrapper","DetailContainer","ProfileImage","Card","Description","RoadMapContainer","isExtracted","StatsWrapper","StyledStatsItem","xmlns","htmlToReactParser","HtmlToReactParser","require","StyledIcon","CloseIcon","StyledReport","Metadata","collection","onClickMint","useMediaQuery","isDesktop","mintEnabled","color","textAlign","fontSize","fontWeight","profile","name","alignItems","my","contract","candyMachineId","contractAddress","CollectionLinks","maxW","bio","className","charLimit","readMoreText","readLessText","w","bg","size","mt","variant","_hover","backgroundColor","socialmedia","website","ml","discord","twitter","Stats","maxSupply","totalSupply","mintPercentage","price","StatsItem","title","value","mr","isNaN","makeFriendlyNumber","collectionId","accessKey","closeDrawer","view","setView","setCollection","roadmapLoader","setRoadmapLoader","dispatch","useDispatch","getCollectionData","useCallback","getCollectionById","_data","console","log","getData","id","getRoadmapById","roadMap","isExternalMint","window","open","updateShowMint","showMint","ReactElement","parse","h","label","backgroundImage","coverImage","getImageUrl","quality","zIndex","pos","top","p","src","profileImage","fit","alt","stats","extractSrc","minHeight","justifyContent","isIndeterminate","px","flexDir","style","minWidth","heightCalculationMethod","onLoad"],"sourceRoot":""}