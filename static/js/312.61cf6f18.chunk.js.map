{"version":3,"file":"static/js/312.61cf6f18.chunk.js","mappings":"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","sources":["constants/chains.js","constants/endpoints.js","constants/network.js","utils/index.js"],"sourcesContent":["/**\n * List of all the networks supported\n */\nexport const SupportedChainId = {\n  MAINNET: 1,\n  GOERLI: 5,\n  SHARDEUM20: 8081,\n  BINANCE: 56,\n  BINANCE_TESTNET: 97,\n  SOLANA: 9090,\n  SOLANA_DEVNET: 9091,\n  POLYGON_MAINNET: 137,\n  POLYGON_MUMBAI: 80001,\n}\n\nexport const CHAIN_IDS_TO_NAMES = {\n  [SupportedChainId.MAINNET]: 'mainnet',\n  [SupportedChainId.GOERLI]: 'goerli',\n  [SupportedChainId.BINANCE]: 'binance smart chain',\n  [SupportedChainId.BINANCE_TESTNET]: 'binance smart chain - testnet',\n  [SupportedChainId.SHARDEUM20]: 'Shardeum Liberty 2.0',\n}\n\nexport const CHAIN_IDS_TO_NAMES_HYPHEN = {\n  [SupportedChainId.MAINNET]: 'eth',\n  [SupportedChainId.GOERLI]: 'goerli',\n  [SupportedChainId.BINANCE]: 'bsc',\n  [SupportedChainId.BINANCE_TESTNET]: 'bsc-testnet',\n  [SupportedChainId.SOLANA]: 'solana',\n  [SupportedChainId.SOLANA_DEVNET]: 'solana-devnet',\n  [SupportedChainId.SHARDEUM20]: 'Shardeum-Liberty-2.0',\n  [SupportedChainId.POLYGON_MAINNET]: 'polygon-mainnet',\n  [SupportedChainId.POLYGON_MUMBAI]: 'polygon-mumbai',\n}\n\nexport const BLOCK_EXPLORER = {\n  [SupportedChainId.MAINNET]: 'https://etherscan.io/',\n  [SupportedChainId.GOERLI]: 'https://goerli.etherscan.io/',\n  [SupportedChainId.BINANCE]: 'https://bscscan.com/',\n  [SupportedChainId.BINANCE_TESTNET]: 'https://testnet.bscscan.com/',\n  [SupportedChainId.SOLANA]: 'https://solscan.io/',\n  [SupportedChainId.SOLANA_DEVNET]: 'https://solscan.io/',\n  [SupportedChainId.SHARDEUM20]: 'https://explorer-liberty20.shardeum.org/',\n  [SupportedChainId.POLYGON_MAINNET]: 'https://polygonscan.com/',\n  [SupportedChainId.POLYGON_MUMBAI]: 'https://mumbai.polygonscan.com/',\n}\n\nexport const CHAIN_INFO = {\n  [SupportedChainId.MAINNET]: {\n    explorer: BLOCK_EXPLORER[SupportedChainId.MAINNET],\n    label: 'Ethereum',\n    // logoUrl: ethereumLogoUrl,\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  },\n  [SupportedChainId.GOERLI]: {\n    explorer: BLOCK_EXPLORER[SupportedChainId.GOERLI],\n    label: 'Goerli',\n    // logoUrl: ethereumLogoUrl,\n    nativeCurrency: { name: 'Goerli Ether', symbol: 'gETH', decimals: 18 },\n  },\n  [SupportedChainId.BINANCE]: {\n    explorer: BLOCK_EXPLORER[SupportedChainId.BINANCE],\n    label: 'BNB Smart Chain Mainnet',\n    // logoUrl: ethereumLogoUrl,\n    nativeCurrency: { name: 'BNB', symbol: 'bnb', decimals: 18 },\n  },\n  [SupportedChainId.BINANCE_TESTNET]: {\n    explorer: BLOCK_EXPLORER[SupportedChainId.BINANCE_TESTNET],\n    label: 'BNB Smart Chain Testnet',\n    // logoUrl: ethereumLogoUrl,\n    nativeCurrency: { name: 'BNB', symbol: 'bnb', decimals: 18 },\n  },\n  [SupportedChainId.SHARDEUM20]: {\n    explorer: BLOCK_EXPLORER[SupportedChainId.SHARDEUM20],\n    label: 'Shardeum Liberty 2.0',\n    // logoUrl: ethereumLogoUrl,\n    nativeCurrency: { name: 'SHM', symbol: 'SHM', decimals: 18 },\n  },\n  [SupportedChainId.POLYGON_MUMBAI]: {\n    explorer: BLOCK_EXPLORER[SupportedChainId.POLYGON_MUMBAI],\n    label: 'Mumbai',\n    // logoUrl: ethereumLogoUrl,\n    nativeCurrency: { name: 'MATIC', symbol: 'MATIC', decimals: 18 },\n  },\n  [SupportedChainId.POLYGON_MAINNET]: {\n    explorer: BLOCK_EXPLORER[SupportedChainId.POLYGON_MAINNET],\n    label: 'Polygon Mainnet',\n    // logoUrl: ethereumLogoUrl,\n    nativeCurrency: { name: 'MATIC', symbol: 'MATIC', decimals: 18 },\n  },\n}\n\n/**\n * Array of all the supported chain IDs\n */\nexport const ALL_SUPPORTED_CHAIN_IDS = Object.values(SupportedChainId).filter((id) => typeof id === 'number')\n\nexport const TEST_NET_CHAIN_IDS = [1, 5, 56, 4, 97, 8081, 137, 80001]\n\nexport const SupportedEvmChains = TEST_NET_CHAIN_IDS\n\nexport const MAIN_NET_CHAIN_IDS = [1, 56, 8081]\n","export const SDK_API = process.env.REACT_APP_SDK_API\n","import { SupportedChainId } from './chains'\n\nconst SUPPORTED_NETWORKS_NAMES = {\n  [SupportedChainId.MAINNET]: 'Ethereum mainnet',\n  [SupportedChainId.GOERLI]: 'Goerli',\n  [SupportedChainId.BINANCE]: 'Binance smart chain mainnet',\n  [SupportedChainId.BINANCE_TESTNET]: 'Binance smart chain testnet',\n  [SupportedChainId.SOLANA]: 'Solana mainnet beta',\n  [SupportedChainId.SOLANA_DEVNET]: 'Solana devnet',\n  [SupportedChainId.SHARDEUM20]: 'Shardeum Liberty 2.0',\n  [SupportedChainId.POLYGON_MUMBAI]: 'Polygon Mumbai',\n  [SupportedChainId.POLYGON_MAINNET]: 'Polygon',\n}\n\nexport const SUPPORTED_NETWORKS_INFO = {\n  [SupportedChainId.MAINNET]: {\n    name: 'Ethereum mainnet',\n    api: 'https://api.etherscan.io/api',\n    key: '7GJC7W52P7BJ3ESQCBGG2YP3M597M69ZEC',\n    explorer: 'https://etherscan.io',\n  },\n\n  [SupportedChainId.GOERLI]: {\n    name: 'Goerli',\n    api: 'https://api-goerli.etherscan.io/api',\n    key: '7GJC7W52P7BJ3ESQCBGG2YP3M597M69ZEC',\n    explorer: 'https://goerli.etherscan.io',\n  },\n  [SupportedChainId.BINANCE]: {\n    name: 'Binance smart chain mainnet',\n    api: 'https://api.bscscan.com/api',\n    key: '3THBPRKH4RNSF4KF52JFAJZX92SHX2FUIV',\n    explorer: 'https://bscscan.com',\n  },\n  [SupportedChainId.BINANCE_TESTNET]: {\n    name: 'Binance smart chain testnet',\n    api: 'https://api-testnet.bscscan.com/api',\n    key: '3THBPRKH4RNSF4KF52JFAJZX92SHX2FUIV',\n    explorer: 'https://testnet.bscscan.com',\n  },\n  [SupportedChainId.SHARDEUM20]: {\n    name: 'Shadreum liberty 2.0',\n    api: '',\n    key: '',\n    explorer: 'https://explorer-liberty20.shardeum.org/',\n  },\n  [SupportedChainId.SOLANA]: {\n    name: 'Solana',\n    api: '',\n    key: '',\n  },\n  [SupportedChainId.SOLANA_DEVNET]: {\n    name: 'Solana devnet',\n    api: '',\n    key: '',\n  },\n}\n\nconst INFURA_KEY = process.env.NEXT_PUBLIC_INFURA_KEY\n\n/**\n * These are the network URLs used by the interface when there is not another available source of chain data\n */\nexport const NETWORK_URLS = {\n  [SupportedChainId.MAINNET]: `https://mainnet.infura.io/v3/3e34307cdece46d9a15cce3d2a7525a2`,\n  [SupportedChainId.GOERLI]: `https://goerli.infura.io/v3/3e34307cdece46d9a15cce3d2a7525a2`,\n  [SupportedChainId.SHARDEUM20]: `https://liberty20.shardeum.org/`,\n  [SupportedChainId.BINANCE]: `https://bsc-dataseed.binance.org`,\n  [SupportedChainId.BINANCE_TESTNET]: `https://data-seed-prebsc-1-s1.binance.org:8545`,\n}\nexport const NETWORK_URLS_FOR_WALLET = {\n  [SupportedChainId.MAINNET]: `https://mainnet.infura.io/v3/3e34307cdece46d9a15cce3d2a7525a2`,\n  [SupportedChainId.GOERLI]: `https://goerli.infura.io/v3/3e34307cdece46d9a15cce3d2a7525a2`,\n  [SupportedChainId.BINANCE]: `https://bsc-dataseed.binance.org`,\n  [SupportedChainId.SHARDEUM20]: `https://liberty20.shardeum.org/`,\n  [SupportedChainId.BINANCE_TESTNET]: `https://data-seed-prebsc-1-s1.binance.org:8545`,\n  [SupportedChainId.POLYGON_MUMBAI]: `https://endpoints.omniatech.io/v1/matic/mumbai/public`,\n  [SupportedChainId.POLYGON_MAINNET]: `https://polygon.llamarpc.com`,\n}\n\nexport const FALLBACK_URLS = {\n  [SupportedChainId.MAINNET]: [\n    // \"Safe\" URLs\n    'https://api.mycryptoapi.com/eth',\n    'https://cloudflare-eth.com',\n    // \"Fallback\" URLs\n    'https://rpc.ankr.com/eth',\n    'https://eth-mainnet.public.blastapi.io',\n  ],\n\n  [SupportedChainId.GOERLI]: [\n    // \"Safe\" URLs\n    'https://rpc.goerli.mudit.blog/',\n    // \"Fallback\" URLs\n    'https://rpc.ankr.com/eth_goerli',\n  ],\n}\n\nexport const CHAIN_IDS_TO_NAMES_URL_COMPONENT = {\n  [SupportedChainId.MAINNET]: encodeURIComponent('ethereum'),\n  [SupportedChainId.GOERLI]: encodeURIComponent('goerli'),\n  [SupportedChainId.BINANCE]: encodeURIComponent('binance'),\n  [SupportedChainId.BINANCE_TESTNET]: encodeURIComponent('binance testnet'),\n  [SupportedChainId.SOLANA]: encodeURIComponent('solana'),\n  [SupportedChainId.SOLANA_DEVNET]: encodeURIComponent('solana_devnet'),\n  [SupportedChainId.SHARDEUM20]: encodeURIComponent('shardeum 2.0'),\n  [SupportedChainId.POLYGON_MAINNET]: encodeURIComponent('polygon'),\n  [SupportedChainId.POLYGON_MUMBAI]: encodeURIComponent('polygon-mumbai'),\n}\n\nexport { SUPPORTED_NETWORKS_NAMES }\n","import { AddressZero } from '@ethersproject/constants'\nimport { isAddress } from '@ethersproject/address'\nimport { Contract } from '@ethersproject/contracts'\n\nexport const getImageUrl = (url, { height, quality }) => {\n  if (url.includes('imagedelivery.net')) {\n    return `${url}/height=${height},quality=${quality}`\n  }\n  return url\n}\n\n// account is not optional\nfunction getSigner(provider, account) {\n  return provider.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nfunction getProviderOrSigner(provider, account) {\n  return account ? getSigner(provider, account) : provider\n}\n\n// account is optional\nexport function getContract(address, ABI, provider, account) {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(provider, account))\n}\n\n// // truncate username\n// export const truncateUsername = (username = '') => {\n//   if (isValidAddress(username)) {\n//     return truncateAddress(username, 5)\n//   }\n//   return username\n// }\n\n// truncate address\nexport const truncateAddress = (address, digits) => {\n  if (address) {\n    return address.length > digits\n      ? address.substr(0, digits - 1) + '...' + address.substr(address.length - (digits - 1), address.length - 1)\n      : address\n  } else {\n    return ''\n  }\n}\n\n// make friendly number\nexport const makeFriendlyNumber = (number) => {\n  return new Intl.NumberFormat('en-GB', {\n    notation: 'compact',\n    compactDisplay: 'short',\n  }).format(number)\n}\n\n// copy text\nexport const copyText = (text, cb) => {\n  if (navigator.clipboard && navigator.permissions) {\n    navigator.clipboard.writeText(text).then(cb)\n  } else if (document.queryCommandSupported('copy')) {\n    const ele = document.createElement('textarea')\n    ele.value = text\n    document.body.appendChild(ele)\n    ele.select()\n    document.execCommand('copy')\n    document.body.removeChild(ele)\n    cb?.()\n  }\n}\n\n// extract url from iframe tag if iframe exist\nexport const extractSrc = (str) => {\n  const regex = /<iframe.*src=\"([^\"]+)\".*>/\n  const match = str.match(regex)\n  if (match) {\n    return match[1]\n  }\n  return null\n}\n"],"names":["SupportedChainId","MAINNET","GOERLI","SHARDEUM20","BINANCE","BINANCE_TESTNET","SOLANA","SOLANA_DEVNET","POLYGON_MAINNET","POLYGON_MUMBAI","BLOCK_EXPLORER","CHAIN_INFO","explorer","label","nativeCurrency","name","symbol","decimals","SupportedEvmChains","Object","values","filter","id","SDK_API","process","SUPPORTED_NETWORKS_NAMES","NETWORK_URLS","api","key","NETWORK_URLS_FOR_WALLET","FALLBACK_URLS","CHAIN_IDS_TO_NAMES_URL_COMPONENT","encodeURIComponent","getImageUrl","url","height","quality","includes","getContract","address","ABI","provider","account","isAddress","AddressZero","Error","Contract","getSigner","connectUnchecked","getProviderOrSigner","truncateAddress","digits","length","substr","makeFriendlyNumber","number","Intl","NumberFormat","notation","compactDisplay","format","copyText","text","cb","navigator","clipboard","permissions","writeText","then","document","queryCommandSupported","ele","createElement","value","body","appendChild","select","execCommand","removeChild","extractSrc","str","match"],"sourceRoot":""}