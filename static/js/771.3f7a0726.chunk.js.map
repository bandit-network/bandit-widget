{"version":3,"file":"static/js/771.3f7a0726.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/modal/dist/chunk-VRAQ7LO3.mjs","../node_modules/@chakra-ui/transition/dist/chunk-D35G6FNO.mjs","../node_modules/@chakra-ui/modal/dist/chunk-7PTKRZFZ.mjs","App3.js","../node_modules/@chakra-ui/hooks/dist/chunk-EGV7XMQK.mjs","../node_modules/@chakra-ui/hooks/dist/chunk-NUQE4USX.mjs","../node_modules/@chakra-ui/utils/dist/chunk-O3SWHQEE.mjs","../node_modules/@chakra-ui/hooks/dist/chunk-IYF65QR3.mjs","../node_modules/@chakra-ui/hooks/dist/chunk-TFWETJDV.mjs","../node_modules/@chakra-ui/hooks/dist/chunk-CHB4ZXZG.mjs"],"sourcesContent":["import {\n  Modal\n} from \"./chunk-UUGUEMMH.mjs\";\n\n// src/drawer.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { useTheme } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [DrawerContextProvider, useDrawerContext] = createContext();\nvar placementMap = {\n  start: { ltr: \"left\", rtl: \"right\" },\n  end: { ltr: \"right\", rtl: \"left\" }\n};\nfunction getDrawerPlacement(placement, dir) {\n  var _a, _b;\n  if (!placement)\n    return;\n  return (_b = (_a = placementMap[placement]) == null ? void 0 : _a[dir]) != null ? _b : placement;\n}\nfunction Drawer(props) {\n  var _a;\n  const {\n    isOpen,\n    onClose,\n    placement: placementProp = \"right\",\n    children,\n    ...rest\n  } = props;\n  const theme = useTheme();\n  const drawerStyleConfig = (_a = theme.components) == null ? void 0 : _a.Drawer;\n  const placement = getDrawerPlacement(placementProp, theme.direction);\n  return /* @__PURE__ */ jsx(DrawerContextProvider, { value: { placement }, children: /* @__PURE__ */ jsx(\n    Modal,\n    {\n      isOpen,\n      onClose,\n      styleConfig: drawerStyleConfig,\n      ...rest,\n      children\n    }\n  ) });\n}\n\nexport {\n  useDrawerContext,\n  Drawer\n};\n","import {\n  TRANSITION_EASINGS,\n  getSlideTransition,\n  withDelay\n} from \"./chunk-LB6CWFOC.mjs\";\n\n// src/slide.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  AnimatePresence,\n  motion\n} from \"framer-motion\";\nimport { forwardRef } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TRANSITION_EASINGS.easeInOut\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180\n  }\n};\nvar variants = {\n  exit: ({ direction, transition, transitionEnd, delay }) => {\n    var _a;\n    const { exit: exitStyles } = getSlideTransition({ direction });\n    return {\n      ...exitStyles,\n      transition: (_a = transition == null ? void 0 : transition.exit) != null ? _a : withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    };\n  },\n  enter: ({ direction, transitionEnd, transition, delay }) => {\n    var _a;\n    const { enter: enterStyles } = getSlideTransition({ direction });\n    return {\n      ...enterStyles,\n      transition: (_a = transition == null ? void 0 : transition.enter) != null ? _a : withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  }\n};\nvar Slide = forwardRef(function Slide2(props, ref) {\n  const {\n    direction = \"right\",\n    style,\n    unmountOnExit,\n    in: isOpen,\n    className,\n    transition,\n    transitionEnd,\n    delay,\n    motionProps,\n    ...rest\n  } = props;\n  const transitionStyles = getSlideTransition({ direction });\n  const computedStyle = Object.assign(\n    { position: \"fixed\" },\n    transitionStyles.position,\n    style\n  );\n  const show = unmountOnExit ? isOpen && unmountOnExit : true;\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  const custom = { transitionEnd, transition, direction, delay };\n  return /* @__PURE__ */ jsx(AnimatePresence, { custom, children: show && /* @__PURE__ */ jsx(\n    motion.div,\n    {\n      ...rest,\n      ref,\n      initial: \"exit\",\n      className: cx(\"chakra-slide\", className),\n      animate,\n      exit: \"exit\",\n      custom,\n      variants,\n      style: computedStyle,\n      ...motionProps\n    }\n  ) });\n});\nSlide.displayName = \"Slide\";\n\nexport {\n  Slide\n};\n","import {\n  useDrawerContext\n} from \"./chunk-VRAQ7LO3.mjs\";\nimport {\n  ModalFocusScope\n} from \"./chunk-CJQLKBLU.mjs\";\nimport {\n  useModalContext,\n  useModalStyles\n} from \"./chunk-UUGUEMMH.mjs\";\n\n// src/drawer-content.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { Slide } from \"@chakra-ui/transition\";\nimport { jsx } from \"react/jsx-runtime\";\nvar MotionDiv = chakra(Slide);\nvar DrawerContent = forwardRef(\n  (props, ref) => {\n    const {\n      className,\n      children,\n      motionProps,\n      containerProps: rootProps,\n      ...rest\n    } = props;\n    const { getDialogProps, getDialogContainerProps, isOpen } = useModalContext();\n    const dialogProps = getDialogProps(rest, ref);\n    const containerProps = getDialogContainerProps(rootProps);\n    const _className = cx(\"chakra-modal__content\", className);\n    const styles = useModalStyles();\n    const dialogStyles = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\",\n      width: \"100%\",\n      outline: 0,\n      ...styles.dialog\n    };\n    const dialogContainerStyles = {\n      display: \"flex\",\n      width: \"100vw\",\n      height: \"$100vh\",\n      position: \"fixed\",\n      left: 0,\n      top: 0,\n      ...styles.dialogContainer\n    };\n    const { placement } = useDrawerContext();\n    return /* @__PURE__ */ jsx(ModalFocusScope, { children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...containerProps,\n        className: \"chakra-modal__content-container\",\n        __css: dialogContainerStyles,\n        children: /* @__PURE__ */ jsx(\n          MotionDiv,\n          {\n            motionProps,\n            direction: placement,\n            in: isOpen,\n            className: _className,\n            ...dialogProps,\n            __css: dialogStyles,\n            children\n          }\n        )\n      }\n    ) });\n  }\n);\nDrawerContent.displayName = \"DrawerContent\";\n\nexport {\n  DrawerContent\n};\n","import { useDisclosure } from '@chakra-ui/hooks'\nimport { Drawer, DrawerBody, DrawerContent, DrawerOverlay } from '@chakra-ui/modal'\nimport React, { lazy, Suspense, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { updateCollectionViewOpen, updateSelectedCollectionId } from './state/collection/reducer'\nimport { Box } from '@chakra-ui/react'\n// import queryString from 'query-string'\n\nconst Collection = lazy(() => import('./widgets/Collection/collection'))\n\nfunction App() {\n  const { selectedCollectionId, showMint, collectionViewOpen } = useSelector((state) => state.collection)\n  const accessKey = useSelector((state) => state.user.accessKey)\n  const dispatch = useDispatch()\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const closeDrawer = () => {\n    // onClose()\n    dispatch(updateCollectionViewOpen({ collectionViewOpen: false }))\n    dispatch(updateSelectedCollectionId({ id: null }))\n  }\n\n  // useEffect(() => {\n  //   const { search } = window.location\n  //   const parsed = queryString.parse(search)\n  //   if (search && parsed.collection) {\n  //     dispatch(updateSelectedCollectionId({ id: parsed.collection }))\n  //     dispatch(updateCollectionViewOpen({ collectionViewOpen: true }))\n  //   }\n  // }, [window.location])\n\n  // useEffect(() => {}, [collectionViewOpen, selectedCollectionId])\n\n  // useEffect(() => {\n  //   if (selectedCollectionId && !showMint && !collectionViewOpen) {\n  //     dispatch(updateCollectionViewOpen({ collectionViewOpen: true }))\n  //     // onOpen()\n  //   }\n  // }, [selectedCollectionId, collectionViewOpen])\n\n  // if (!selectedCollectionId) return null\n  return (\n    <Suspense fallback={null}>\n      <Drawer\n        placement={'bottom'}\n        onClose={() => dispatch(updateCollectionViewOpen({ collectionViewOpen: false }))}\n        isOpen={collectionViewOpen}\n        closeOnOverlayClick={false}\n      >\n        <DrawerOverlay bg=\"rgba(0,0,0,0.8)\" />\n        <DrawerContent h=\"93%\" bg=\"transparent\">\n          <DrawerBody p=\"0\" borderTopRightRadius={'20'} borderTopLeftRadius={'20'} bg=\"background\">\n            <Box height=\"100%\">\n              <Collection accessKey={accessKey} collectionId={selectedCollectionId} closeDrawer={closeDrawer} />\n            </Box>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </Suspense>\n  )\n}\n\nexport default App\n","// src/use-id.ts\nimport { useCallback, useId as useReactId, useMemo, useState } from \"react\";\nfunction useId(idProp, prefix) {\n  const id = useReactId();\n  return useMemo(\n    () => idProp || [prefix, id].filter(Boolean).join(\"-\"),\n    [idProp, prefix, id]\n  );\n}\nfunction useIds(idProp, ...prefixes) {\n  const id = useId(idProp);\n  return useMemo(() => {\n    return prefixes.map((prefix) => `${prefix}-${id}`);\n  }, [id, prefixes]);\n}\nfunction useOptionalPart(partId) {\n  const [id, setId] = useState(null);\n  const ref = useCallback(\n    (node) => {\n      setId(node ? partId : null);\n    },\n    [partId]\n  );\n  return { ref, id, isRendered: Boolean(id) };\n}\n\nexport {\n  useId,\n  useIds,\n  useOptionalPart\n};\n","import {\n  useCallbackRef\n} from \"./chunk-TFWETJDV.mjs\";\n\n// src/use-controllable.ts\nimport { runIfFn } from \"@chakra-ui/utils\";\nimport { useCallback, useState } from \"react\";\nfunction useControllableProp(prop, state) {\n  const isControlled = prop !== void 0;\n  const value = isControlled && typeof prop !== \"undefined\" ? prop : state;\n  return [isControlled, value];\n}\nfunction useControllableState(props) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    shouldUpdate = (prev, next) => prev !== next\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const shouldUpdateProp = useCallbackRef(shouldUpdate);\n  const [valueState, setValue] = useState(defaultValue);\n  const isControlled = valueProp !== void 0;\n  const value = isControlled ? valueProp : valueState;\n  const updateValue = useCallback(\n    (next) => {\n      const nextValue = runIfFn(next, value);\n      if (!shouldUpdateProp(value, nextValue)) {\n        return;\n      }\n      if (!isControlled) {\n        setValue(nextValue);\n      }\n      onChangeProp(nextValue);\n    },\n    [isControlled, onChangeProp, value, shouldUpdateProp]\n  );\n  return [value, updateValue];\n}\n\nexport {\n  useControllableProp,\n  useControllableState\n};\n","// src/dom.ts\nfunction isElement(el) {\n  return el != null && typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n}\nfunction isHTMLElement(el) {\n  var _a;\n  if (!isElement(el)) {\n    return false;\n  }\n  const win = (_a = el.ownerDocument.defaultView) != null ? _a : window;\n  return el instanceof win.HTMLElement;\n}\nfunction getOwnerWindow(node) {\n  var _a, _b;\n  return isElement(node) ? (_b = (_a = getOwnerDocument(node)) == null ? void 0 : _a.defaultView) != null ? _b : window : window;\n}\nfunction getOwnerDocument(node) {\n  var _a;\n  return isElement(node) ? (_a = node.ownerDocument) != null ? _a : document : document;\n}\nfunction getEventWindow(event) {\n  var _a;\n  return (_a = event.view) != null ? _a : window;\n}\nfunction canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\nvar isBrowser = /* @__PURE__ */ canUseDOM();\nvar dataAttr = (condition) => condition ? \"\" : void 0;\nvar ariaAttr = (condition) => condition ? true : void 0;\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nfunction getActiveElement(node) {\n  const doc = getOwnerDocument(node);\n  return doc == null ? void 0 : doc.activeElement;\n}\nfunction contains(parent, child) {\n  if (!parent)\n    return false;\n  return parent === child || parent.contains(child);\n}\nfunction addDomEvent(target, eventName, handler, options) {\n  target.addEventListener(eventName, handler, options);\n  return () => {\n    target.removeEventListener(eventName, handler, options);\n  };\n}\nfunction normalizeEventKey(event) {\n  const { key, keyCode } = event;\n  const isArrowKey = keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0;\n  const eventKey = isArrowKey ? `Arrow${key}` : key;\n  return eventKey;\n}\nfunction getRelatedTarget(event) {\n  var _a, _b;\n  const target = (_a = event.target) != null ? _a : event.currentTarget;\n  const activeElement = getActiveElement(target);\n  return (_b = event.relatedTarget) != null ? _b : activeElement;\n}\nfunction isRightClick(event) {\n  return event.button !== 0;\n}\n\nexport {\n  isElement,\n  isHTMLElement,\n  getOwnerWindow,\n  getOwnerDocument,\n  getEventWindow,\n  canUseDOM,\n  isBrowser,\n  dataAttr,\n  ariaAttr,\n  cx,\n  getActiveElement,\n  contains,\n  addDomEvent,\n  normalizeEventKey,\n  getRelatedTarget,\n  isRightClick\n};\n","// src/use-safe-layout-effect.ts\nimport { isBrowser } from \"@chakra-ui/utils\";\nimport { useEffect, useLayoutEffect } from \"react\";\nvar useSafeLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport {\n  useSafeLayoutEffect\n};\n","import {\n  useSafeLayoutEffect\n} from \"./chunk-IYF65QR3.mjs\";\n\n// src/use-callback-ref.ts\nimport { useCallback, useRef } from \"react\";\nfunction useCallbackRef(fn, deps = []) {\n  const ref = useRef(fn);\n  useSafeLayoutEffect(() => {\n    ref.current = fn;\n  });\n  return useCallback((...args) => {\n    var _a;\n    return (_a = ref.current) == null ? void 0 : _a.call(ref, ...args);\n  }, deps);\n}\n\nexport {\n  useCallbackRef\n};\n","import {\n  useId\n} from \"./chunk-EGV7XMQK.mjs\";\nimport {\n  useControllableProp\n} from \"./chunk-NUQE4USX.mjs\";\nimport {\n  useCallbackRef\n} from \"./chunk-TFWETJDV.mjs\";\n\n// src/use-disclosure.ts\nimport { callAllHandlers } from \"@chakra-ui/utils\";\nimport { useCallback, useState } from \"react\";\nfunction useDisclosure(props = {}) {\n  const {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp\n  } = props;\n  const onOpenPropCallbackRef = useCallbackRef(onOpenProp);\n  const onClosePropCallbackRef = useCallbackRef(onCloseProp);\n  const [isOpenState, setIsOpen] = useState(props.defaultIsOpen || false);\n  const [isControlled, isOpen] = useControllableProp(isOpenProp, isOpenState);\n  const id = useId(idProp, \"disclosure\");\n  const onClose = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n    onClosePropCallbackRef == null ? void 0 : onClosePropCallbackRef();\n  }, [isControlled, onClosePropCallbackRef]);\n  const onOpen = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n    onOpenPropCallbackRef == null ? void 0 : onOpenPropCallbackRef();\n  }, [isControlled, onOpenPropCallbackRef]);\n  const onToggle = useCallback(() => {\n    const action = isOpen ? onClose : onOpen;\n    action();\n  }, [isOpen, onOpen, onClose]);\n  return {\n    isOpen: !!isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps: (props2 = {}) => ({\n      ...props2,\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n      onClick: callAllHandlers(props2.onClick, onToggle)\n    }),\n    getDisclosureProps: (props2 = {}) => ({\n      ...props2,\n      hidden: !isOpen,\n      id\n    })\n  };\n}\n\nexport {\n  useDisclosure\n};\n"],"names":["createContext","DrawerContextProvider","useDrawerContext","placementMap","start","ltr","rtl","end","Drawer","props","_a","isOpen","onClose","placement","placementProp","children","rest","theme","useTheme","drawerStyleConfig","components","dir","_b","getDrawerPlacement","direction","jsx","value","Modal","styleConfig","defaultTransition","exit","duration","ease","TRANSITION_EASINGS","enter","type","damping","stiffness","variants","transition","transitionEnd","delay","exitStyles","getSlideTransition","withDelay","enterStyles","Slide","forwardRef","ref","style","unmountOnExit","in","className","motionProps","transitionStyles","computedStyle","Object","assign","position","show","animate","custom","AnimatePresence","motion","initial","cx","displayName","MotionDiv","chakra","DrawerContent","rootProps","containerProps","useModalContext","getDialogProps","getDialogContainerProps","dialogProps","_className","styles","useModalStyles","dialogStyles","display","flexDirection","width","outline","dialog","dialogContainerStyles","height","left","top","dialogContainer","ModalFocusScope","__css","Collection","lazy","useSelector","state","collection","selectedCollectionId","collectionViewOpen","showMint","accessKey","user","dispatch","useDispatch","useDisclosure","onOpen","Suspense","fallback","updateCollectionViewOpen","closeOnOverlayClick","bg","h","p","borderTopRightRadius","borderTopLeftRadius","collectionId","closeDrawer","updateSelectedCollectionId","id","useId","idProp","prefix","useReactId","useMemo","filter","Boolean","join","useControllableProp","prop","isControlled","canUseDOM","window","document","createElement","useSafeLayoutEffect","useLayoutEffect","useEffect","useCallbackRef","fn","deps","useRef","current","useCallback","args","call","onCloseProp","onOpenProp","isOpenProp","onOpenPropCallbackRef","onClosePropCallbackRef","useState","defaultIsOpen","isOpenState","setIsOpen","onToggle","getButtonProps","props2","onClick","callAllHandlers","getDisclosureProps","hidden"],"sourceRoot":""}