{"version":3,"file":"static/js/761.a76172f5.chunk.js","mappings":"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","sources":["../../src/Layout.ts","../node_modules/@solana/buffer-layout/node_modules/buffer/index.js","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/cryptoBrowser.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/superstruct/src/utils.ts","../node_modules/superstruct/src/error.ts","../node_modules/superstruct/src/struct.ts","../node_modules/superstruct/src/structs/utilities.ts","../node_modules/superstruct/src/structs/types.ts","../node_modules/superstruct/src/structs/coercions.ts","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/secp256k1/lib/esm/index.js","../node_modules/@solana/web3.js/src/utils/ed25519.ts","../node_modules/@solana/web3.js/src/utils/to-buffer.ts","../node_modules/@solana/web3.js/src/utils/borsh-schema.ts","../node_modules/@solana/web3.js/src/publickey.ts","../node_modules/@solana/web3.js/src/account.ts","../node_modules/@solana/web3.js/src/bpf-loader-deprecated.ts","../node_modules/@solana/web3.js/src/transaction/constants.ts","../node_modules/@solana/web3.js/src/transaction/expiry-custom-errors.ts","../node_modules/@solana/web3.js/src/message/account-keys.ts","../node_modules/@solana/web3.js/src/layout.ts","../node_modules/@solana/web3.js/src/utils/shortvec-encoding.ts","../node_modules/@solana/web3.js/src/utils/assert.ts","../node_modules/@solana/web3.js/src/transaction/legacy.ts","../node_modules/@solana/web3.js/src/message/compiled-keys.ts","../node_modules/@solana/web3.js/src/message/legacy.ts","../node_modules/@solana/web3.js/src/message/v0.ts","../node_modules/@solana/web3.js/src/message/versioned.ts","../node_modules/@solana/web3.js/src/transaction/message.ts","../node_modules/@solana/web3.js/src/transaction/versioned.ts","../node_modules/@solana/web3.js/src/sysvar.ts","../node_modules/@solana/web3.js/src/utils/send-and-confirm-transaction.ts","../node_modules/@solana/web3.js/src/utils/sleep.ts","../node_modules/@solana/web3.js/src/instruction.ts","../node_modules/@solana/web3.js/src/fee-calculator.ts","../node_modules/@solana/web3.js/src/utils/bigint.ts","../node_modules/@solana/web3.js/src/nonce-account.ts","../node_modules/@solana/web3.js/src/programs/system.ts","../node_modules/@solana/web3.js/src/loader.ts","../node_modules/@solana/web3.js/src/bpf-loader.ts","../node_modules/@solana/web3.js/node_modules/fast-stable-stringify/index.js","../node_modules/@solana/web3.js/src/epoch-schedule.ts","../node_modules/@solana/web3.js/src/errors.ts","../node_modules/@solana/web3.js/src/__forks__/browser/fetch-impl.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/state.ts","../node_modules/@solana/web3.js/src/account-data.ts","../node_modules/@solana/web3.js/src/utils/makeWebsocketUrl.ts","../node_modules/@solana/web3.js/src/connection.ts","../node_modules/@solana/web3.js/src/keypair.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/index.ts","../node_modules/@solana/web3.js/src/programs/compute-budget.ts","../node_modules/@solana/web3.js/src/programs/ed25519.ts","../node_modules/@solana/web3.js/src/utils/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/stake.ts","../node_modules/@solana/web3.js/src/programs/vote.ts","../node_modules/@solana/web3.js/src/validator-info.ts","../node_modules/@solana/web3.js/src/vote-account.ts","../node_modules/@solana/web3.js/src/utils/cluster.ts","../node_modules/@solana/web3.js/src/utils/send-and-confirm-raw-transaction.ts","../node_modules/@solana/web3.js/src/index.ts","../node_modules/@solana/web3.js/node_modules/buffer/index.js","../node_modules/base-x/src/index.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/borsh/lib/index.js","../node_modules/bs58/index.js","../node_modules/eventemitter3/index.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/safe-buffer/index.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/construct.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/get.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@chakra-ui/button/dist/chunk-DGWZA2DU.mjs","../node_modules/@chakra-ui/button/dist/chunk-HCASMTTF.mjs","../node_modules/@chakra-ui/button/dist/chunk-HNNHG6RU.mjs","../node_modules/@chakra-ui/button/dist/chunk-NAA7TEES.mjs","../node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs","../node_modules/@chakra-ui/icons/dist/chunk-DYUZQHG7.mjs","../node_modules/@chakra-ui/image/dist/chunk-QBIO4VEB.mjs","../node_modules/@chakra-ui/image/dist/chunk-HR33I6FK.mjs","../node_modules/@chakra-ui/image/dist/chunk-E77276RR.mjs","../node_modules/@chakra-ui/layout/dist/chunk-YTV6DHKL.mjs","../node_modules/@chakra-ui/tooltip/dist/chunk-UNJFLZPD.mjs","../node_modules/@chakra-ui/tooltip/dist/chunk-GOQMVUD7.mjs","../node_modules/@chakra-ui/tooltip/dist/chunk-OMHV467B.mjs","../node_modules/@noble/ed25519/lib/esm/index.js","../node_modules/bignumber.js/bignumber.mjs","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs"],"sourcesContent":[null,"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   */\n  verifySignatures(requireAllSignatures?: boolean): boolean {\n    return this._verifySignatures(\n      this.serializeMessage(),\n      requireAllSignatures === undefined ? true : requireAllSignatures,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {Message} from './legacy';\nimport {MessageV0} from './v0';\n\nexport type VersionedMessage = Message | MessageV0;\n// eslint-disable-next-line no-redeclare\nexport const VersionedMessage = {\n  deserializeMessageVersion(serializedMessage: Uint8Array): 'legacy' | number {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n\n  deserialize: (serializedMessage: Uint8Array): VersionedMessage => {\n    const version =\n      VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(\n        `Transaction message version ${version} deserialization is not supported`,\n      );\n    }\n  },\n};\n","import {AccountKeysFromLookups} from '../message/account-keys';\nimport assert from '../utils/assert';\nimport {toBuffer} from '../utils/to-buffer';\nimport {Blockhash} from '../blockhash';\nimport {Message, MessageV0, VersionedMessage} from '../message';\nimport {PublicKey} from '../publickey';\nimport {AddressLookupTableAccount} from '../programs';\nimport {AccountMeta, TransactionInstruction} from './legacy';\n\nexport type TransactionMessageArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\nexport type DecompileArgs =\n  | {\n      accountKeysFromLookups: AccountKeysFromLookups;\n    }\n  | {\n      addressLookupTableAccounts: AddressLookupTableAccount[];\n    };\n\nexport class TransactionMessage {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n\n  constructor(args: TransactionMessageArgs) {\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n\n  static decompile(\n    message: VersionedMessage,\n    args?: DecompileArgs,\n  ): TransactionMessage {\n    const {header, compiledInstructions, recentBlockhash} = message;\n\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts,\n    } = header;\n\n    const numWritableSignedAccounts =\n      numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n\n    const numWritableUnsignedAccounts =\n      message.staticAccountKeys.length -\n      numRequiredSignatures -\n      numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error(\n        'Failed to decompile message because no account keys were found',\n      );\n    }\n\n    const instructions: TransactionInstruction[] = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys: AccountMeta[] = [];\n\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(\n            `Failed to find key for account key index ${keyIndex}`,\n          );\n        }\n\n        const isSigner = keyIndex < numRequiredSignatures;\n\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable =\n            keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable =\n            keyIndex - accountKeys.staticAccountKeys.length <\n            // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n            accountKeys.accountKeysFromLookups!.writable.length;\n        }\n\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable,\n        });\n      }\n\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(\n          `Failed to find program id for program id index ${compiledIx.programIdIndex}`,\n        );\n      }\n\n      instructions.push(\n        new TransactionInstruction({\n          programId,\n          data: toBuffer(compiledIx.data),\n          keys,\n        }),\n      );\n    }\n\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash,\n    });\n  }\n\n  compileToLegacyMessage(): Message {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n    });\n  }\n\n  compileToV0Message(\n    addressLookupTableAccounts?: AddressLookupTableAccount[],\n  ): MessageV0 {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {Signer} from '../keypair';\nimport assert from '../utils/assert';\nimport {VersionedMessage} from '../message/versioned';\nimport {SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport * as Layout from '../layout';\nimport {sign} from '../utils/ed25519';\nimport {PublicKey} from '../publickey';\n\nexport type TransactionVersion = 'legacy' | 0;\n\n/**\n * Versioned transaction class\n */\nexport class VersionedTransaction {\n  signatures: Array<Uint8Array>;\n  message: VersionedMessage;\n\n  get version(): TransactionVersion {\n    return this.message.version;\n  }\n\n  constructor(message: VersionedMessage, signatures?: Array<Uint8Array>) {\n    if (signatures !== undefined) {\n      assert(\n        signatures.length === message.header.numRequiredSignatures,\n        'Expected signatures length to be equal to the number of required signatures',\n      );\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n\n  serialize(): Uint8Array {\n    const serializedMessage = this.message.serialize();\n\n    const encodedSignaturesLength = Array<number>();\n    shortvec.encodeLength(encodedSignaturesLength, this.signatures.length);\n\n    const transactionLayout = BufferLayout.struct<{\n      encodedSignaturesLength: Uint8Array;\n      signatures: Array<Uint8Array>;\n      serializedMessage: Uint8Array;\n    }>([\n      BufferLayout.blob(\n        encodedSignaturesLength.length,\n        'encodedSignaturesLength',\n      ),\n      BufferLayout.seq(\n        Layout.signature(),\n        this.signatures.length,\n        'signatures',\n      ),\n      BufferLayout.blob(serializedMessage.length, 'serializedMessage'),\n    ]);\n\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode(\n      {\n        encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n        signatures: this.signatures,\n        serializedMessage,\n      },\n      serializedTransaction,\n    );\n\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n\n  static deserialize(serializedTransaction: Uint8Array): VersionedTransaction {\n    let byteArray = [...serializedTransaction];\n\n    const signatures = [];\n    const signaturesLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(\n        new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)),\n      );\n    }\n\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n\n  sign(signers: Array<Signer>) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey =>\n        pubkey.equals(signer.publicKey),\n      );\n      assert(\n        signerIndex >= 0,\n        `Cannot sign with non signer key ${signer.publicKey.toBase58()}`,\n      );\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n\n  addSignature(publicKey: PublicKey, signature: Uint8Array) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    const signerIndex = signerPubkeys.findIndex(pubkey =>\n      pubkey.equals(publicKey),\n    );\n    assert(\n      signerIndex >= 0,\n      `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`,\n    );\n    this.signatures[signerIndex] = signature;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","import type {Buffer} from 'buffer';\n\nimport {\n  BlockheightBasedTransactionConfirmationStrategy,\n  Connection,\n  DurableNonceTransactionConfirmationStrategy,\n  TransactionConfirmationStrategy,\n} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategy: TransactionConfirmationStrategy,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategyOrConfirmOptions:\n    | TransactionConfirmationStrategy\n    | ConfirmOptions\n    | undefined,\n  maybeConfirmOptions?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  let confirmationStrategy: TransactionConfirmationStrategy | undefined;\n  let options: ConfirmOptions | undefined;\n  if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'lastValidBlockHeight',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as BlockheightBasedTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'nonceValue',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as DurableNonceTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions as\n      | ConfirmOptions\n      | undefined;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy\n    ? connection.confirmTransaction(confirmationStrategy, commitment)\n    : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _construct.apply(null, arguments);\n}\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}\nmodule.exports = _createSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _get.apply(this, arguments);\n}\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nmodule.exports = _isNativeFunction, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nvar setPrototypeOf = require(\"./setPrototypeOf.js\");\nvar isNativeFunction = require(\"./isNativeFunction.js\");\nvar construct = require(\"./construct.js\");\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _wrapNativeSuper(Class);\n}\nmodule.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n","// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n","// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n","import {\n  useButtonType\n} from \"./chunk-FRFD4OXU.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-DGWZA2DU.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-HCASMTTF.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-HNNHG6RU.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n","// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n","// src/Close.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar CloseIcon = createIcon({\n  displayName: \"CloseIcon\",\n  d: \"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z\"\n});\n\nexport {\n  CloseIcon\n};\n","// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ jsx(\"img\", { width: htmlWidth, height: htmlHeight, ref, alt, ...rest });\n});\nNativeImage.displayName = \"NativeImage\";\n\nexport {\n  NativeImage\n};\n","// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport {\n  useImage,\n  shouldShowFallbackImage\n};\n","import {\n  NativeImage\n} from \"./chunk-QBIO4VEB.mjs\";\nimport {\n  shouldShowFallbackImage,\n  useImage\n} from \"./chunk-HR33I6FK.mjs\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/image.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport {\n  Image\n};\n","// src/link.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport {\n  Link\n};\n","// src/tooltip.transition.tsx\nvar scale = {\n  exit: {\n    scale: 0.85,\n    opacity: 0,\n    transition: {\n      opacity: { duration: 0.15, easings: \"easeInOut\" },\n      scale: { duration: 0.2, easings: \"easeInOut\" }\n    }\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      opacity: { easings: \"easeOut\", duration: 0.2 },\n      scale: { duration: 0.2, ease: [0.175, 0.885, 0.4, 1.1] }\n    }\n  }\n};\n\nexport {\n  scale\n};\n","// src/use-tooltip.ts\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { useDisclosure } from \"@chakra-ui/react-use-disclosure\";\nimport { popperCSSVars, usePopper } from \"@chakra-ui/popper\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport {\n  useCallback,\n  useEffect,\n  useRef,\n  useId\n} from \"react\";\nvar getDoc = (ref) => {\n  var _a;\n  return ((_a = ref.current) == null ? void 0 : _a.ownerDocument) || document;\n};\nvar getWin = (ref) => {\n  var _a, _b;\n  return ((_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument) == null ? void 0 : _b.defaultView) || window;\n};\nfunction useTooltip(props = {}) {\n  const {\n    openDelay = 0,\n    closeDelay = 0,\n    closeOnClick = true,\n    closeOnMouseDown,\n    closeOnScroll,\n    closeOnPointerDown = closeOnMouseDown,\n    closeOnEsc = true,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    placement,\n    id,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    arrowSize = 10,\n    arrowShadowColor,\n    arrowPadding,\n    modifiers,\n    isDisabled,\n    gutter,\n    offset,\n    direction,\n    ...htmlProps\n  } = props;\n  const { isOpen, onOpen, onClose } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp\n  });\n  const { referenceRef, getPopperProps, getArrowInnerProps, getArrowProps } = usePopper({\n    enabled: isOpen,\n    placement,\n    arrowPadding,\n    modifiers,\n    gutter,\n    offset,\n    direction\n  });\n  const uuid = useId();\n  const uid = id != null ? id : uuid;\n  const tooltipId = `tooltip-${uid}`;\n  const ref = useRef(null);\n  const enterTimeout = useRef();\n  const clearEnterTimeout = useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current);\n      enterTimeout.current = void 0;\n    }\n  }, []);\n  const exitTimeout = useRef();\n  const clearExitTimeout = useCallback(() => {\n    if (exitTimeout.current) {\n      clearTimeout(exitTimeout.current);\n      exitTimeout.current = void 0;\n    }\n  }, []);\n  const closeNow = useCallback(() => {\n    clearExitTimeout();\n    onClose();\n  }, [onClose, clearExitTimeout]);\n  const dispatchCloseEvent = useCloseEvent(ref, closeNow);\n  const openWithDelay = useCallback(() => {\n    if (!isDisabled && !enterTimeout.current) {\n      dispatchCloseEvent();\n      const win = getWin(ref);\n      enterTimeout.current = win.setTimeout(onOpen, openDelay);\n    }\n  }, [dispatchCloseEvent, isDisabled, onOpen, openDelay]);\n  const closeWithDelay = useCallback(() => {\n    clearEnterTimeout();\n    const win = getWin(ref);\n    exitTimeout.current = win.setTimeout(closeNow, closeDelay);\n  }, [closeDelay, closeNow, clearEnterTimeout]);\n  const onClick = useCallback(() => {\n    if (isOpen && closeOnClick) {\n      closeWithDelay();\n    }\n  }, [closeOnClick, closeWithDelay, isOpen]);\n  const onPointerDown = useCallback(() => {\n    if (isOpen && closeOnPointerDown) {\n      closeWithDelay();\n    }\n  }, [closeOnPointerDown, closeWithDelay, isOpen]);\n  const onKeyDown = useCallback(\n    (event) => {\n      if (isOpen && event.key === \"Escape\") {\n        closeWithDelay();\n      }\n    },\n    [isOpen, closeWithDelay]\n  );\n  useEventListener(\n    () => getDoc(ref),\n    \"keydown\",\n    closeOnEsc ? onKeyDown : void 0\n  );\n  useEventListener(\n    () => getDoc(ref),\n    \"scroll\",\n    () => {\n      if (isOpen && closeOnScroll) {\n        closeNow();\n      }\n    }\n  );\n  useEffect(() => {\n    if (!isDisabled)\n      return;\n    clearEnterTimeout();\n    if (isOpen)\n      onClose();\n  }, [isDisabled, isOpen, onClose, clearEnterTimeout]);\n  useEffect(\n    () => () => {\n      clearEnterTimeout();\n      clearExitTimeout();\n    },\n    [clearEnterTimeout, clearExitTimeout]\n  );\n  useEventListener(() => ref.current, \"pointerleave\", closeWithDelay);\n  const getTriggerProps = useCallback(\n    (props2 = {}, _ref = null) => {\n      const triggerProps = {\n        ...props2,\n        ref: mergeRefs(ref, _ref, referenceRef),\n        onPointerEnter: callAllHandlers(props2.onPointerEnter, (e) => {\n          if (e.pointerType === \"touch\")\n            return;\n          openWithDelay();\n        }),\n        onClick: callAllHandlers(props2.onClick, onClick),\n        onPointerDown: callAllHandlers(props2.onPointerDown, onPointerDown),\n        onFocus: callAllHandlers(props2.onFocus, openWithDelay),\n        onBlur: callAllHandlers(props2.onBlur, closeWithDelay),\n        \"aria-describedby\": isOpen ? tooltipId : void 0\n      };\n      return triggerProps;\n    },\n    [\n      openWithDelay,\n      closeWithDelay,\n      onPointerDown,\n      isOpen,\n      tooltipId,\n      onClick,\n      referenceRef\n    ]\n  );\n  const getTooltipPositionerProps = useCallback(\n    (props2 = {}, forwardedRef = null) => getPopperProps(\n      {\n        ...props2,\n        style: {\n          ...props2.style,\n          [popperCSSVars.arrowSize.var]: arrowSize ? `${arrowSize}px` : void 0,\n          [popperCSSVars.arrowShadowColor.var]: arrowShadowColor\n        }\n      },\n      forwardedRef\n    ),\n    [getPopperProps, arrowSize, arrowShadowColor]\n  );\n  const getTooltipProps = useCallback(\n    (props2 = {}, ref2 = null) => {\n      const styles = {\n        ...props2.style,\n        position: \"relative\",\n        transformOrigin: popperCSSVars.transformOrigin.varRef\n      };\n      return {\n        ref: ref2,\n        ...htmlProps,\n        ...props2,\n        id: tooltipId,\n        role: \"tooltip\",\n        style: styles\n      };\n    },\n    [htmlProps, tooltipId]\n  );\n  return {\n    isOpen,\n    show: openWithDelay,\n    hide: closeWithDelay,\n    getTriggerProps,\n    getTooltipProps,\n    getTooltipPositionerProps,\n    getArrowProps,\n    getArrowInnerProps\n  };\n}\nvar closeEventName = \"chakra-ui:close-tooltip\";\nfunction useCloseEvent(ref, close) {\n  useEffect(() => {\n    const doc = getDoc(ref);\n    doc.addEventListener(closeEventName, close);\n    return () => doc.removeEventListener(closeEventName, close);\n  }, [close, ref]);\n  return () => {\n    const doc = getDoc(ref);\n    const win = getWin(ref);\n    doc.dispatchEvent(new win.CustomEvent(closeEventName));\n  };\n}\n\nexport {\n  useTooltip\n};\n","import {\n  scale\n} from \"./chunk-UNJFLZPD.mjs\";\nimport {\n  useTooltip\n} from \"./chunk-GOQMVUD7.mjs\";\n\n// src/tooltip.tsx\nimport { popperCSSVars } from \"@chakra-ui/popper\";\nimport { Portal } from \"@chakra-ui/portal\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig,\n  useTheme,\n  getCSSVar\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\nfunction pick(object, keysToPick) {\n  const result = {};\n  for (const key of keysToPick) {\n    if (key in object) {\n      result[key] = object[key];\n    }\n  }\n  return result;\n}\n\n// src/tooltip.tsx\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { Children, cloneElement } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar MotionDiv = chakra(motion.div);\nvar Tooltip = forwardRef((props, ref) => {\n  var _a, _b;\n  const styles = useStyleConfig(\"Tooltip\", props);\n  const ownProps = omitThemingProps(props);\n  const theme = useTheme();\n  const {\n    children,\n    label,\n    shouldWrapChildren,\n    \"aria-label\": ariaLabel,\n    hasArrow,\n    bg,\n    portalProps,\n    background,\n    backgroundColor,\n    bgColor,\n    motionProps,\n    ...rest\n  } = ownProps;\n  const userDefinedBg = (_b = (_a = background != null ? background : backgroundColor) != null ? _a : bg) != null ? _b : bgColor;\n  if (userDefinedBg) {\n    styles.bg = userDefinedBg;\n    const bgVar = getCSSVar(theme, \"colors\", userDefinedBg);\n    styles[popperCSSVars.arrowBg.var] = bgVar;\n  }\n  const tooltip = useTooltip({ ...rest, direction: theme.direction });\n  const shouldWrap = typeof children === \"string\" || shouldWrapChildren;\n  let trigger;\n  if (shouldWrap) {\n    trigger = /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        display: \"inline-block\",\n        tabIndex: 0,\n        ...tooltip.getTriggerProps(),\n        children\n      }\n    );\n  } else {\n    const child = Children.only(children);\n    trigger = cloneElement(\n      child,\n      tooltip.getTriggerProps(child.props, child.ref)\n    );\n  }\n  const hasAriaLabel = !!ariaLabel;\n  const _tooltipProps = tooltip.getTooltipProps({}, ref);\n  const tooltipProps = hasAriaLabel ? omit(_tooltipProps, [\"role\", \"id\"]) : _tooltipProps;\n  const srOnlyProps = pick(_tooltipProps, [\"role\", \"id\"]);\n  if (!label) {\n    return /* @__PURE__ */ jsx(Fragment, { children });\n  }\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    trigger,\n    /* @__PURE__ */ jsx(AnimatePresence, { children: tooltip.isOpen && /* @__PURE__ */ jsx(Portal, { ...portalProps, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...tooltip.getTooltipPositionerProps(),\n        __css: {\n          zIndex: styles.zIndex,\n          pointerEvents: \"none\"\n        },\n        children: /* @__PURE__ */ jsxs(\n          MotionDiv,\n          {\n            variants: scale,\n            initial: \"exit\",\n            animate: \"enter\",\n            exit: \"exit\",\n            ...motionProps,\n            ...tooltipProps,\n            __css: styles,\n            children: [\n              label,\n              hasAriaLabel && /* @__PURE__ */ jsx(chakra.span, { srOnly: true, ...srOnlyProps, children: ariaLabel }),\n              hasArrow && /* @__PURE__ */ jsx(\n                chakra.div,\n                {\n                  \"data-popper-arrow\": true,\n                  className: \"chakra-tooltip__arrow-wrapper\",\n                  children: /* @__PURE__ */ jsx(\n                    chakra.div,\n                    {\n                      \"data-popper-arrow-inner\": true,\n                      className: \"chakra-tooltip__arrow\",\n                      __css: { bg: styles.bg }\n                    }\n                  )\n                }\n              )\n            ]\n          }\n        )\n      }\n    ) }) })\n  ] });\n});\nTooltip.displayName = \"Tooltip\";\n\nexport {\n  Tooltip\n};\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","/*\r\n *      bignumber.js v9.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, P.lt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, P.gt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  function maxOrMin(args, method) {\r\n    var n,\r\n      i = 1,\r\n      m = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      n = new BigNumber(args[i]);\r\n\r\n      // If any number is NaN, return NaN.\r\n      if (!n.s) {\r\n        m = n;\r\n        break;\r\n      } else if (method.call(m, n)) {\r\n        m = n;\r\n      }\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = n / pows10[d - j - 1] % 10 | 0;\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n"],"names":["checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","buffer_1","from","buffer","byteOffset","length","exports","Layout","span","property","Number","isInteger","offset","RangeError","rv","Object","create","constructor","prototype","assign","values","nameWithProperty","name","lo","Class","layout","hasOwnProperty","call","Error","layout_","boundConstructor_","makeDestinationObject","defineProperty","value","encode","writable","decode","ExternalLayout","GreedyCount","elementSpan","rem","Math","floor","src","OffsetLayout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","isCount","idx","getSpan","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","replicate","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","variant","VariantLayout","vb","union","fromArray","fixBitwiseResult","BitStructure","word","msb","_packedSetValue","_packedGetValue","bits","bf","BitField","Boolean","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","base64","require","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","buf","setPrototypeOf","arg","encodingOrOffset","allocUnsafe","string","encoding","isEncoding","byteLength","actual","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","obj","isBuffer","len","checked","numberIsNaN","type","data","fromObject","toPrimitive","assertSize","size","array","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","end","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","base64Write","ucs2Write","units","c","hi","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","mul","readUintBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readInt8","readInt16LE","readInt16BE","readBigInt64LE","readBigInt64BE","writeUintLE","writeUintBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","limit","sub","writeInt8","writeInt16LE","writeInt16BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","code","errors","E","sym","getMessage","Base","configurable","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","base64clean","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","number","isSafeInteger","lengths","assert","bool","hash","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","u32","self","crypto","Uint32Array","createView","DataView","rotr","padStart","toBytes","TextEncoder","Hash","_cloneInto","wrapConstructor","hashConstructor","hashC","update","digest","tmp","SHA2","padOffset","isLE","view","take","process","dataView","roundClean","setBigUint64","_32n","_u32_max","wh","wl","h","l","setUint32","oview","outLen","state","digestInto","destroy","to","U32_MASK64","fromBig","le","u64","lst","Ah","Al","toBig","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","map","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","sha512","Maj","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","F","G","H","W15","W2","s0","s1","T1","T2","SHA224","sha256","toFailures","StructError","failure","failures","cached","rest","path","join","isIterable","isObject","iterator","print","JSON","stringify","shiftIterator","next","done","toFailure","result","context","struct","branch","refinement","key","r","run","options","coerce","mask","ctx","coercer","schema","valid","validator","entries","k","ts","t","Map","Set","refiner","Struct","props","is","validate","tuples","tuple","define","Element","boolean","literal","constant","description","never","nullable","isNaN","optional","record","Key","Value","Elements","Never","keys","Structs","unknown","condition","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","posOut","state32","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","keccakP","keccak","finish","bufferOut","writeInto","xofInto","gen","keccak_256","genShake","hashCons","opts","wrapConstructorWithOpts","dkLen","HMAC","_key","iHash","pad","oHash","getPrototypeOf","hmac","_3n","_8n","CURVE","freeze","P","Gx","Gy","beta","divNearest","endo","a1","b1","a2","b2","POW_2_128","c1","c2","k1","mod","k2","k1neg","k2neg","fieldLen","groupLen","hashLen","weierstrass","x2","x3","USE_ENDOMORPHISM","ShaError","assertJacPoint","other","JacobianPoint","z","X1","Y1","Z1","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","X3","double","ZERO","HH","HHH","V","negate","scalar","P0","normalizeScalar","p","d","k1p","k2p","W","windows","points","base","window","affinePoint","BASE","Point","_WINDOW_SIZE","precomputes","pointPrecomputes","precomputeWindow","normalizeZ","f","windowSize","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","constTimeNegate","point","fake","wNAF","f1p","f2p","invZ","is0","invert","iz1","iz2","iz3","ax","ay","zz","toInv","nums","scratch","inverted","num","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","item","neg","WeakMap","delete","isCompressed","hexToBytes","toHex","numTo32bStr","prefix","hasEvenY","toRawBytes","isValidFieldElement","left","multiply","Q","aP","multiplyUnsafe","bQ","isShort","bytesToNumber","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","pow2","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","rt","sqrtMod","isYOdd","assertValidity","hex","ensureBytes","header","fromCompressedHex","fromUncompressedHex","privateKey","normalizePrivateKey","msgHash","signature","recovery","normalizeSignature","truncateHash","radj","rinv","u1","u2","fromHex","multiplyAndAddUnsafe","sliceDER","parseDERInt","bytesToHex","Signature","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHexUnpadded","rHex","sHexL","rHexL","sLen","rLen","toDERRawBytes","toCompactHex","hexToNumber","rBytesLeft","parseDERSignature","fromDER","concatBytes","arrays","every","hexes","uint8a","_sha256Sync","_hmacSha256Sync","POW_2_256","numTo32b","hexByte","byte","power","modulo","u","q","gcd","bits2int_2","delta","truncateOnly","HmacDrbg","qByteLen","counter","utils","hmacSha256","seed","checkSync","hmacSync","incr","sl","kmdToSig","kBytes","lowS","kinv","sig","normalizeS","fromCompact","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","randomBytes","finalizeSig","recSig","canonical","der","recovered","hashed","toCompactRawBytes","_setWindowSize","node","nodeCrypto","web","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","bytesLength","getRandomValues","randomPrivateKey","precompute","messages","subtle","createHash","forEach","importKey","ckey","sign","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","tagH","taggedHashSync","_JacobianPoint","defineProperties","ed25519","generatePrivateKey","generateKeypair","privateScalar","publicKey","getPublicKey","secretKey","isOnCurve","verify","toBuffer","properties","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","Enum","enum","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","toStringTag","PublicKey","_bn","isPublicKeyData","decoded","bs58","BN","eq","toBase58","toArrayLike","zeroPad","fromPublicKey","programId","publicKeyBytes","seeds","createProgramAddressSync","address","nonce","seedsWithNonce","err","findProgramAddressSync","pubkeyData","_Symbol$toStringTag","default","kind","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","getAlloc","getItemAlloc","field","decodeLength","elem","encodeLength","rem_len","TransactionStatus","CompiledKeys","payer","keyMetaMap","getMessageComponents","mapEntries","writableSigners","filter","isSigner","isWritable","readonlySigners","writableNonSigners","readonlyNonSigners","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","extractTableLookup","lookupTable","drainKeysFoundInLookupTable","addresses","keyMeta","isInvoked","writableIndexes","drainedWritableKeys","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","getOrInsertDefault","payerKeyMeta","ix","accountMeta","Message","args","accountKeys","recentBlockhash","indexToProgramIds","account","accounts","getAccountKeys","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","has","programIds","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","transaction","signData","compile","payerKey","accountCount","dataSlice","MessageV0","compiledInstructions","addressTableLookups","lookup","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","tableLookup","tableAccount","find","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","compiledKeys","lookupTableAccounts","extractResult","addressTableLookup","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","version","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","invariant","_compile","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_verifySignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","TransactionMessage","compileToLegacyMessage","compileToV0Message","numWritableSignedAccounts","numWritableUnsignedAccounts","compiledIx","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","messageData","signerPubkeys","signerIndex","signaturesLength","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","confirmTransaction","abortSignal","status","nonceAccountPubkey","nonceValue","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","blob","encodeDecode","bigIntLayout","toBigIntLE","bigInt","toBufferLE","SystemInstruction","checkProgramId","typeIndex","SYSTEM_INSTRUCTION_LAYOUTS","ixType","checkKeyLength","Create","lamports","space","fromPubkey","newAccountPubkey","Transfer","toPubkey","TransferWithSeed","basePubkey","Allocate","accountPubkey","AllocateWithSeed","Assign","AssignWithSeed","CreateWithSeed","authorized","InitializeNonceAccount","noncePubkey","AdvanceNonceAccount","WithdrawNonceAccount","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","expectedLength","UpgradeNonceAccount","params","createAccountWithSeed","createAccount","initParams","nonceInitialize","instructionData","CHUNK_SIZE","Loader","ceil","chunkSize","program","getMinimumBalanceForRentExemption","balanceNeeded","getAccountInfo","programInfo","executable","allocate","owner","transfer","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","all","BPF_LOADER_PROGRAM_ID","BpfLoader","getMinNumSignatures","elf","loaderProgramId","load","objToString","objKeys","isArrayProp","propVal","toStr","returnVal","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","customMessage","globalThis","fetch","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","extractCommitmentFromConfig","commitmentOrConfig","specifiedConfig","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","response","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetInflationRateResult","total","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","source","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","Connection","endpoint","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","httpAgent","client","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","makeWebsocketUrl","url","customFetch","fetchWithMiddleware","fetchImpl","info","init","reject","modifiedInfo","modifiedInit","modifiedFetchArgs","clientBrowser","RpcClient","request","callback","method","body","agent","headers","too_many_requests_retries","waitTime","log","statusText","text","ok","createRpcClient","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_buildArgs","unsafeRes","getBalanceAndContext","then","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","configWithoutEncoding","strategy","rawSignature","aborted","reason","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","addEventListener","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","abortConfirmation","removeSignatureListener","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","expiryPromise","checkBlockHeight","getBlockHeight","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","race","outcome","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","_signatureStatus","commitmentForStatus","timeoutMs","timeoutId","TIMED_OUT","clearTimeout","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","transactionDetails","extra","block","endSlot","getFirstAvailableBlock","firstAvailableBlock","getConfirmedBlockSignatures","until","getSlot","highestConfirmedRoot","before","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","accountInfo","fromAccountData","disableCache","timeSinceFetch","Date","now","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","MS_PER_SLOT","transactionOrMessage","configOrSigners","includeAccounts","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","logTrace","traceIndent","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","cb","clientSubscriptionId","_this$_subscriptionSt","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","notification","_makeSubscription","subscriptionConfig","fastStableStringify","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","checkKeysLength","recentSlot","recipient","AddressLookupTableProgram","lookupTableAddress","bumpSeed","addr","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","additionalFee","RequestHeapFrame","SetComputeUnitLimit","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","fromSecretKey","createInstructionWithPublicKey","secp256k1","msgs","ecdsaSign","privKey","drbg","reseedSync","generateSync","publicKeyCreate","fromPrivateKey","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","Initialize","lockup","stakePubkey","Delegate","Authorize","newAuthorized","stakeAuthorizationType","o","custodianPubkey","AuthorizeWithSeed","authoritySeed","authorityOwner","authorityBase","Split","splitStakePubkey","Merge","sourceStakePubKey","Withdraw","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","initialize","splitInstruction","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","voteInit","InitializeAccount","voteAuthorizationType","voteAuthorizeWithSeedArgs","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","VoteAuthorizationLayout","Voter","initializeAccount","currentVoteAccountBalance","rentExemptMinimum","withdraw","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","configKeys","rawInfo","parse","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","isEmpty","http","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL","_Buffer","module","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","carry","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","reversed","reverse","toBigIntBE","width","toBufferBE","__createBinding","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","maybeResize","writeBuffer","toArray","writeU32","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","deserializeField","reader","readFixedArray","readArray","readU8","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","basex","Events","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","a3","a4","a5","removeListener","removeAllListeners","off","prefixed","uuid","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","isError","_interopRequireDefault","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","_isNativeReflectConstruct","Super","NewTarget","Client","_CommonClient","_super","_ref","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","propertyIsEnumerable","CommonClient","_EventEmitter","webSocketFactory","_this","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","socket","timeout","ws_opts","_this2","send","promise","_login","mark","_callee","resp","wrap","_context","prev","sent","abrupt","stop","_x","_listMethods","_callee2","_context2","_this3","_subscribe","_callee3","_context3","_x2","_unsubscribe","_callee4","_context4","_x3","_this4","_ref2","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","copyProps","SafeBuffer","rnds8","rng","msCrypto","REGEX","byteToHex","rnds","random","arr2","ReferenceError","asyncGeneratorStep","_next","_throw","Constructor","isNativeReflectConstruct","_construct","Parent","Function","toPropertyKey","_defineProperties","descriptor","protoProps","staticProps","unsupportedIterableToArray","allowArrayLike","it","_e","normalCompletion","didErr","step","_e2","possibleConstructorReturn","superPropBase","_get","receiver","_getPrototypeOf","subClass","superClass","_i","_s","_r","_n","_d","_typeof","assertThisInitialized","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","_sent","dispatchException","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","awrap","async","iter","object","pop","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","_setPrototypeOf","arrayWithHoles","iterableToArrayLimit","nonIterableRest","hint","prim","arrayLikeToArray","minLen","isNativeFunction","_wrapNativeSuper","_cache","Wrapper","runtime","regeneratorRuntime","accidentalStrictMode","createContext","strict","useButtonGroup","ButtonIcon","children","className","_children","isValidElement","cloneElement","focusable","_className","cx","jsx","chakra","display","alignSelf","flexShrink","ButtonSpinner","label","placement","spacing","Spinner","color","height","__css","marginProp","spinnerStyles","useMemo","alignItems","position","Button","forwardRef","ref","group","styles","useStyleConfig","omitThemingProps","isDisabled","isLoading","leftIcon","rightIcon","loadingText","iconSpacing","spinner","spinnerPlacement","as","buttonStyles","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","useState","isButton","setIsButton","useCallback","tagName","useButtonType","defaultType","contentProps","jsxs","useMergeRefs","dataAttr","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart","CloseIcon","createIcon","NativeImage","htmlWidth","htmlHeight","alt","Image","fallbackSrc","fallback","srcSet","align","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","onLoad","onError","sizes","setStatus","useEffect","imageRef","useRef","flush","img","srcset","onload","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","keysToOmit","clone","omit","Link","isExternal","rel","scale","exit","transition","duration","easings","enter","ease","getDoc","ownerDocument","document","getWin","_b","defaultView","closeEventName","useCloseEvent","doc","removeEventListener","win","dispatchEvent","CustomEvent","MotionDiv","motion","Tooltip","ownProps","theme","useTheme","shouldWrapChildren","ariaLabel","hasArrow","bg","portalProps","background","backgroundColor","bgColor","motionProps","userDefinedBg","bgVar","getCSSVar","popperCSSVars","trigger","tooltip","openDelay","closeDelay","closeOnClick","closeOnMouseDown","closeOnScroll","closeOnPointerDown","closeOnEsc","onOpenProp","onOpen","onCloseProp","onClose","isOpenProp","isOpen","defaultIsOpen","arrowSize","arrowShadowColor","arrowPadding","modifiers","gutter","direction","htmlProps","useDisclosure","usePopper","enabled","referenceRef","getPopperProps","getArrowInnerProps","getArrowProps","useId","tooltipId","enterTimeout","clearEnterTimeout","exitTimeout","clearExitTimeout","closeNow","dispatchCloseEvent","openWithDelay","closeWithDelay","onClick","onPointerDown","onKeyDown","useEventListener","getTriggerProps","props2","mergeRefs","onPointerEnter","callAllHandlers","pointerType","onFocus","onBlur","getTooltipPositionerProps","forwardedRef","style","getTooltipProps","ref2","transformOrigin","role","show","hide","useTooltip","tabIndex","child","Children","hasAriaLabel","_tooltipProps","tooltipProps","srOnlyProps","keysToPick","AnimatePresence","Portal","pointerEvents","variants","animate","srOnly","CU_O","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","assertExtPoint","X1Z2","X2Z1","Y1Z2","Y2Z1","x1y1","Y3","T3","pr","legacyRist","assertRstPoint","RistrettoPoint","ep","u2sq","invsqrt","invertSqrt","D1","D2","zInv","edIsNegative","_y","numberTo32BytesLE","one","two","subtract","r0","Ns","uvRatio","Ns_D_is_sq","isValid","s_","Nt","s2","W0","W1","W3","r1","bytes255ToNumberLE","R1","calcElligatorRistrettoMap","r2","R2","emsg","equalBytes","u1_2","u2_2","I","Dx","Dy","isTorsionFree","normed","bytesToNumberLE","y2","isXOdd","isLastByteOdd","getExtendedPublicKey","u8","numberTo32BytesBE","_sha512Sync","MAX_255B","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","adjustBytes25519","checkPrivateKey","getKeyFromHash","head","pointBytes","sha512s","getExtendedPublicKeySync","prepareVerification","SB","pub","finishVerification","kA","sync","TORSION_SUBGROUP","hashToPrivateScalar","sha512Sync","isNumeric","mathceil","mathfloor","bignumberError","tooManyDigits","LOG_BASE","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","yc","intCheck","isOdd","toExponential","toFixedPoint","zs","BigNumber","configObject","div","convertBase","parseNumeric","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","alphabetHasNormalDecimalDigits","caseChanged","isNum","_isBigNumber","search","substring","DEBUG","format","rm","c0","ne","maxOrMin","normalise","sd","ni","rd","pows10","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","lt","minimum","gt","pow2_53","random53bitInt","dp","rand","plus","decimal","toBaseOut","baseIn","baseOut","arrL","callerIsToString","temp","xlo","xhi","klo","khi","aL","bL","cmp","more","prod","prodL","qc","remL","rem0","xi","xL","yc0","yL","yz","NaN","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","p1","p2","absoluteValue","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","times","integerValue","isEqualTo","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","xLTy","xe","ye","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFormat","g1","g2","intPart","fractionPart","isNeg","intDigits","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toPrecision","for","inRange","ToDictionary","Stream","tokens","endOfStream","prepend","token","decoderError","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","input_stream","code_points","cp","codePointsToString","opt_string","stringToCodePoints"],"sourceRoot":""}